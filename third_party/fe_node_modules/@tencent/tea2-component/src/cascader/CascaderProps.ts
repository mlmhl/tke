import { Combine, StyledProps } from "../_type";
import { ControlledProps } from "../form/controlled";
import { CommonDropdownProps } from "../dropdown/Dropdown";

export interface CascaderBaseProps
  extends Combine<CommonDropdownProps, StyledProps> {
  /**
   * 选择数据
   */
  data: CascaderData;

  /**
   * 动态加载数据，**需要返回 Promise**
   *
   * 在 `data` 中某级 `options` 为空时调用
   */
  onLoad?: (value: string[], options: CascaderOption[]) => Promise<void>;

  /**
   * 是否每级选项变化都触发改变
   * @default false
   */
  changeOnSelect?: boolean;

  /**
   * 是否为多选模式
   *
   * 🚨 多选模式暂不支持配置 `changeOnSelect`
   *
   * @default false
   * @version 2.2.1
   */
  multiple?: boolean;

  /**
   * 是否支持清空
   * @default false
   * @version 2.3.2
   */
  clearable?: boolean;

  /**
   * 占位符
   * @default "请选择"（已处理国际化）
   */
  placeholder?: string;

  /**
   * 是否禁用选择
   * @default false
   */
  disabled?: boolean;
}

/**
 * 单选模式
 */
export interface CascaderSingleProps
  extends ControlledProps<
    string[],
    React.SyntheticEvent,
    { options: CascaderOption[]; event: React.MouseEvent }
  > {}

/**
 * 多选模式
 */
export interface CascaderMultipleProps
  extends ControlledProps<
    string[][],
    React.SyntheticEvent,
    { options: CascaderOption[][]; event: React.MouseEvent }
  > {}

export type CascaderProps = Combine<
  CascaderBaseProps,
  CascaderSingleProps | CascaderMultipleProps
>;

export interface CascaderOption {
  /**
   * 选项值
   */
  value: string;

  /**
   * 选项标题
   */
  label: React.ReactNode;

  /**
   * 子级数据
   */
  child?: CascaderData;
}

export interface CascaderData {
  /**
   * 当前选择面板标题
   */
  title: React.ReactNode;

  /**
   * 面板布局列数，支持 `1`, `2`, `4`
   * @default 4
   */
  col?: number;

  /**
   * 选项
   *
   * 当该项为空时将触发 `onLoad` 加载数据
   */
  options?: CascaderOption[];
}

export interface CascaderBoxProps extends StyledProps {
  /**
   * 选择数据
   */
  data: CascaderProps["data"];

  /**
   * 当前选择值
   */
  value?: CascaderSingleProps["value"];

  /**
   * 当前选择值变化回调
   */
  onChange: CascaderSingleProps["onChange"];

  /**
   * 选择完毕收起下拉框
   */
  onClose: () => void;

  /**
   * 动态加载数据
   */
  onLoad: CascaderProps["onLoad"];

  /**
   * 是否每级选项变化都触发改变
   * @default false
   */
  changeOnSelect?: CascaderProps["changeOnSelect"];

  /**
   * 类名前缀
   */
  classPrefix?: string;

  /**
   * 是否为多选模式
   */
  multiple?: boolean;

  /**
   * 多选模式下是否被选中
   */
  isSelected?: (value: string[]) => boolean;

  /**
   * 多选模式下取消选择回调
   */
  onDeselect?: CascaderSingleProps["onChange"];
}

export interface CascaderLoadingProps {
  /**
   * 动态加载数据
   */
  onLoad: () => Promise<void>;
}
