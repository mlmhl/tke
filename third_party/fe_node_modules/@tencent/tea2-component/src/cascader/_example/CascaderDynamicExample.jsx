import React, { useState } from "react";
import { Cascader } from "@tencent/tea-component/lib/cascader";

function update(data, valueList, options) {
  let current = data;
  valueList.forEach(value => {
    const option = current.options.find(option => option.value === value);
    if (option && option.child) {
      current = option.child;
    }
  });
  current.options = options;
  return { ...data };
}

export default function CascaderDynamicExample() {
  const [data, setData] = useState({
    title: "省份",
    options: [
      {
        label: "北京市",
        value: "bj",
        child: {
          title: "动态加载示例",
        },
      },
      {
        label: "上海市",
        value: "sh",
        child: {
          title: "动态加载示例",
        },
      },
    ],
  });

  function onLoad(value, options) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        // 模拟失败
        if (Math.random() > 0.7) {
          reject(new Error("Load Error"));
          return;
        }

        const option = options[options.length - 1];
        setData(
          update(data, value, [
            { label: `${option.label}选项一`, value: `${option.value}-1` },
            { label: `${option.label}选项二`, value: `${option.value}-2` },
          ])
        );
        resolve();
      }, 1000);
    });
  }

  return (
    <Cascader
      data={data}
      onChange={(value, { options }) => console.log(value, options)}
      onLoad={onLoad}
    />
  );
}
