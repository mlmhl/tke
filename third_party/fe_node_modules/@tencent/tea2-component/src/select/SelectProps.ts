import { ListOnScrollProps } from "react-window";
import { SelectOptionWithGroup } from "./SelectOption";
import { CommonDropdownProps, DropdownProps } from "../dropdown";
import { Combine, StyledProps } from "../_type";
import { ControlledProps, ChangeContext } from "../form/controlled";
import { SizeType } from "../input";
import { SearchBoxProps } from "../searchbox";

/**
 * 原生下拉框属性 - `NativeSelectProps`
 *
 * 模拟下拉框属性 - `SimulateSelectProps`
 */
export type SelectProps = NativeSelectProps | SimulateSelectProps;

interface CommonSelectProps
  extends Combine<StyledProps, ControlledProps<string>> {
  /**
   * 下拉选项列表
   */
  options?: SelectOptionWithGroup[];

  /**
   * 分组
   */
  groups?: {
    [groupKey: string]: React.ReactNode;
  };

  /**
   * 占位符
   * @default "请选择"（已处理国际化）
   */
  placeholder?: string;

  /**
   * 是否禁用下拉选择
   * @default false
   */
  disabled?: boolean;

  /**
   * 下拉按钮尺寸，使用 `"full"` 撑满容器宽度
   */
  size?: SizeType | "auto";

  /**
   * 元素聚焦事件
   * @version 2.1.1
   */
  onFocus?: React.DOMAttributes<any>["onFocus"];
}

/**
 * 原生单选 Props
 */
export interface NativeSelectProps extends CommonSelectProps {
  /**
   * 默认为 `native`，使用原生下拉框
   */
  type: "native";

  /**
   * 元素失焦事件
   * @version 2.1.1
   */
  onBlur?: React.DOMAttributes<any>["onBlur"];
}

/**
 * 模拟单选 Props
 */
export interface SimulateSelectProps
  extends Combine<
    CommonSelectProps,
    SelectSearchProps<SelectOptionWithGroup>,
    CommonDropdownProps
  > {
  /**
   * 设置为 `simulate` 以使用模拟下拉框
   */
  type: "simulate";

  /**
   * 是否支持清空
   * @default false
   * @version 2.3.2
   */
  clearable?: boolean;

  /**
   * 展开时回调
   */
  onOpen?: DropdownProps["onOpen"];

  /**
   * 收起时回调
   */
  onClose?: DropdownProps["onClose"];

  /**
   * 下拉选框的外观
   *
   * - `default` 无边框，适用于页面标题和表格内
   * - `button` 为按钮风格，有边框，多用于操作栏中
   * - `link` 为超链接风格
   * - `filter` 为过滤组件风格，多用于表头筛选
   * - `pure` 无额外样式
   *
   * 原有 `raw` 类型建议使用 `pure` 进行改造
   *
   *
   * @default "default"
   * @version 2.0.9
   */
  appearance?: DropdownProps["appearance"];

  /**
   * **\[Deprecated\]** 请使用 `appearance` 属性
   * @deprecated
   */
  appearence?: DropdownProps["appearence"];

  /**
   * 下拉按钮的内容，如果不传，默认会使用选中的选项的内容
   * @docType React.ReactNode | ((selectedOption: SelectOptionWithGroup) => React.ReactNode)
   */
  button?:
    | React.ReactNode
    | ((selectedOption: SelectOptionWithGroup) => React.ReactNode);

  /**
   * `options` 滚动至底部的回调
   */
  onScrollBottom?: (props: ListOnScrollProps) => void;

  /**
   * 列表高度
   * @version 2.3.0
   */
  listHeight?: number;

  /**
   * 弹出区域尺寸（宽度）是否同步按钮尺寸
   *
   * @default false
   */
  boxSizeSync?: DropdownProps["boxSizeSync"];

  /**
   * 弹出区域自定义类名
   */
  boxClassName?: DropdownProps["boxClassName"];

  /**
   * 弹出区域自定义样式
   */
  boxStyle?: DropdownProps["boxStyle"];

  /**
   * 列表顶部状态提示
   *
   * 可使用字符串或 StatusTip 组件
   *
   * @docType React.ReactNode | ((selectedOptions: SelectOptionWithGroup[]) => React.ReactNode)
   */
  tips?:
    | React.ReactNode
    | ((selectedOptions: SelectOptionWithGroup[]) => React.ReactNode);

  /**
   * 列表底部状态提示
   *
   * 可使用字符串或 StatusTip 组件
   *
   * @docType React.ReactNode | ((selectedOptions: SelectOptionWithGroup[]) => React.ReactNode)
   *
   * @version 2.0.9
   */
  bottomTips?:
    | React.ReactNode
    | ((selectedOptions: SelectOptionWithGroup[]) => React.ReactNode);

  /**
   * 支持搜索
   * @default false
   */
  searchable?: boolean;

  /**
   * 是否在选中项后或下拉框收起后清空搜索框
   * @default true
   * @version 2.0.9
   */
  autoClearSearchValue?: boolean;
}

export interface SelectSearchProps<T> {
  /**
   * 支持搜索
   * @default false
   */
  searchable?: boolean;

  /**
   * 搜索框占位符
   */
  searchPlaceholder?: SearchBoxProps["placeholder"];

  /**
   * 自定义搜索筛选规则
   *
   * 默认根据输入值筛选
   */
  filter?: (inputValue: string, option: T) => boolean;

  /**
   * 搜索值变化/搜索触发回调
   */
  onSearch?: SearchBoxProps["onSearch"];

  /**
   * 默认搜索值
   * @version 2.2.0
   */
  defaultSearchValue?: SearchBoxProps["defaultValue"];

  /**
   * 搜索值（受控）
   * @version 2.2.0
   */
  searchValue?: SearchBoxProps["value"];

  /**
   * 搜索值变化回调
   * @version 2.2.0
   */
  onSearchValueChange?: SearchBoxProps["onChange"];
}
