import React from "react";
import classNames from "classnames";
import { CollapsePanel } from "./CollapsePanel";
import { CollapseContext, CollapseContextValue } from "./CollapseContext";
import { useDefault } from "../_util/use-default";
import { StyledProps } from "../_type";
import { useConfig } from "../_util/config-context";

export interface CollapseProps extends StyledProps {
  /**
   * 当前激活的面板 ID 组
   */
  activeIds?: CollapseContextValue["activeIds"];

  /**
   * 默认激活的面板 ID 组
   */
  defaultActiveIds?: CollapseContextValue["activeIds"];

  /**
   * 面板激活变化回调
   */
  onActive?: CollapseContextValue["onActive"];

  /**
   * 切换图标
   * @docType React.ReactNode | ((active: boolean) => React.ReactNode)
   */
  icon?: CollapseContextValue["icon"];

  /**
   * 图标位置
   * @default "left"
   */
  iconPosition?: CollapseContextValue["iconPosition"];

  /**
   * 面板 <Collapse.Panel />
   */
  children?: React.ReactNode;
}

export function Collapse({
  activeIds,
  defaultActiveIds = [],
  onActive,
  icon,
  iconPosition = "left",
  children,
  className,
  style,
}: CollapseProps) {
  const { classPrefix } = useConfig();
  const [value, onChange] = useDefault(activeIds, defaultActiveIds, onActive);

  return (
    <div
      className={classNames(`${classPrefix}-accordion-group`, className)}
      style={style}
    >
      <CollapseContext.Provider
        value={{
          activeIds: value,
          onActive: onChange,
          icon,
          iconPosition,
        }}
      >
        {children}
      </CollapseContext.Provider>
    </div>
  );
}

Collapse.Panel = CollapsePanel;
