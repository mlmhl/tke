"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var call_both_1 = require("../_util/call-both");
var config_context_1 = require("../_util/config-context");
var badge_1 = require("../badge");
var SubMenu_1 = require("./SubMenu");
var icon_1 = require("../icon");
var uuid_1 = require("../_util/uuid");
var MenuContext_1 = require("./MenuContext");
var noop = function () { };
var defaultRender = function (children) { return react_1.default.createElement("a", null, children); };
function MenuItem(_a) {
    var _b;
    var title = _a.title, icon = _a.icon, tag = _a.tag, selected = _a.selected, external = _a.external, className = _a.className, style = _a.style, _c = _a.onClick, onClick = _c === void 0 ? noop : _c, _d = _a.render, render = _d === void 0 ? defaultRender : _d;
    var classPrefix = config_context_1.useConfig().classPrefix;
    var setMobileCollapsed = react_1.useContext(MenuContext_1.MenuContext).setMobileCollapsed;
    var _e = react_1.useContext(SubMenu_1.SubMenuContext), inSubMenu = _e.inSubMenu, onSelectedChange = _e.onSelectedChange, setHasTag = _e.setHasTag;
    var idRef = react_1.useRef(uuid_1.uuid());
    react_1.useEffect(function () {
        if (tag) {
            setHasTag(true);
        }
    }, [setHasTag, tag]);
    react_1.useEffect(function () {
        onSelectedChange(idRef.current, selected);
    }, [onSelectedChange, selected]);
    var defaultIcon;
    var activeIcon;
    if (typeof icon === "string") {
        defaultIcon = icon;
        activeIcon = icon;
    }
    if (Array.isArray(icon)) {
        _b = tslib_1.__read(icon, 2), defaultIcon = _b[0], activeIcon = _b[1];
    }
    var children = render(react_1.default.createElement(react_1.default.Fragment, null,
        defaultIcon && !inSubMenu && (react_1.default.createElement("img", { className: classPrefix + "-menu__list-icon", src: defaultIcon, alt: "icon" })),
        activeIcon && !inSubMenu && (react_1.default.createElement("img", { className: classPrefix + "-menu__list-icon is-selected", src: activeIcon, alt: "icon" })),
        react_1.default.createElement("div", { className: classPrefix + "-menu__text" },
            title,
            external && react_1.default.createElement(icon_1.Icon, { type: "externallink" })),
        !!tag && react_1.default.createElement(badge_1.Badge, null, tag)));
    return (react_1.default.createElement("li", { className: classnames_1.default(className, { "is-selected": selected }), style: style, onClick: function () { return setMobileCollapsed(false); } }, react_1.default.cloneElement(children, {
        className: classnames_1.default(classPrefix + "-menu__item", children.props.className),
        onClick: call_both_1.callBoth(onClick, children.props.onClick),
    })));
}
exports.MenuItem = MenuItem;
//# sourceMappingURL=MenuItem.js.map