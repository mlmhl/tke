"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var icon_1 = require("../icon");
var MenuGroup_1 = require("./MenuGroup");
var SubMenu_1 = require("./SubMenu");
var MenuItem_1 = require("./MenuItem");
var use_default_1 = require("../_util/use-default");
var tooltip_1 = require("../tooltip");
var with_statics_1 = require("../_util/with-statics");
var config_context_1 = require("../_util/config-context");
var badge_1 = require("../badge");
var MenuContext_1 = require("./MenuContext");
exports.Menu = with_statics_1.withStatics(function Menu(_a) {
    var _b, _c;
    var theme = _a.theme, title = _a.title, tag = _a.tag, icon = _a.icon, back = _a.back, children = _a.children, className = _a.className, style = _a.style, collapsable = _a.collapsable, _d = _a.defaultCollapsed, defaultCollapsed = _d === void 0 ? false : _d, collapsed = _a.collapsed, onCollapsedChange = _a.onCollapsedChange;
    var classPrefix = config_context_1.useConfig().classPrefix;
    // eslint-disable-next-line no-param-reassign
    _b = tslib_1.__read(use_default_1.useDefault(collapsed, defaultCollapsed, onCollapsedChange), 2), collapsed = _b[0], onCollapsedChange = _b[1];
    var _e = tslib_1.__read(react_1.useState(false), 2), hover = _e[0], setHover = _e[1];
    var _f = tslib_1.__read(react_1.useState(false), 2), mobileCollapsed = _f[0], setMobileCollapsed = _f[1];
    if (Array.isArray(icon)) {
        // eslint-disable-next-line
        icon = icon[0];
    }
    var renderBack = typeof back === "object"
        ? function () {
            var _a;
            var title = back.title, description = back.description, _b = back.onClick, onClick = _b === void 0 ? function () { return null; } : _b, tooltip = back.tooltip;
            var titleList = (react_1.default.createElement("div", { className: classPrefix + "-menu__title-list" },
                react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-h2", (_a = {},
                        _a[classPrefix + "-menu__title-main"] = !!description,
                        _a)) }, title),
                react_1.default.createElement("div", { className: classPrefix + "-menu__title-text" }, description)));
            return (react_1.default.createElement("div", { className: classPrefix + "-menu__title-back" },
                react_1.default.createElement("a", { className: classPrefix + "-menu__back", onClick: onClick },
                    react_1.default.createElement(icon_1.Icon, { type: "btnback" })),
                tooltip ? (react_1.default.createElement(tooltip_1.Tooltip, { title: tooltip }, titleList)) : (titleList)));
        }
        : function () { return null; };
    return (react_1.default.createElement(MenuContext_1.MenuContext.Provider, { value: { collapsed: collapsed && !hover, setMobileCollapsed: setMobileCollapsed } },
        react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-menu", className, (_c = {},
                _c[classPrefix + "-menu--light"] = theme !== "dark",
                _c[classPrefix + "-menu-is-locked"] = collapsed,
                _c[classPrefix + "-menu-is-collapsed"] = collapsed && !hover,
                _c[classPrefix + "-menu-mobile-collapsed"] = mobileCollapsed,
                _c)), style: style },
            react_1.default.createElement("div", { className: classPrefix + "-menu__header", onMouseEnter: function () { return collapsed && setHover(true); }, onMouseLeave: function () { return collapsed && setHover(false); }, onClick: function () { return setMobileCollapsed(function (collapsed) { return !collapsed; }); } },
                !!title && (react_1.default.createElement("div", { className: classPrefix + "-menu__title" },
                    !!icon && (react_1.default.createElement("img", { className: classPrefix + "-menu__title-icon", src: icon, alt: "icon" })),
                    react_1.default.createElement("h2", { className: classPrefix + "-h2" },
                        title,
                        !!tag && react_1.default.createElement(badge_1.Badge, null, tag)),
                    react_1.default.createElement(icon_1.Icon, { type: "arrowdown" }))),
                renderBack()),
            react_1.default.createElement("div", { className: classPrefix + "-menu__body", onMouseEnter: function () { return collapsed && setHover(true); }, onMouseLeave: function () { return collapsed && setHover(false); } },
                react_1.default.createElement("ul", { className: classPrefix + "-menu__list" }, children)),
            !!collapsable && (react_1.default.createElement("div", { className: classPrefix + "-menu__footer" },
                react_1.default.createElement("div", { className: classPrefix + "-menu__fold", onClick: function () { return onCollapsedChange(!collapsed); } },
                    react_1.default.createElement("div", { className: classPrefix + "-menu__fold-icon" },
                        react_1.default.createElement(icon_1.Icon, { type: "fold" }))))))));
}, {
    Group: MenuGroup_1.MenuGroup,
    SubMenu: SubMenu_1.SubMenu,
    Item: MenuItem_1.MenuItem,
});
//# sourceMappingURL=Menu.js.map