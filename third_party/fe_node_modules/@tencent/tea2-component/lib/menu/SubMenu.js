"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var icon_1 = require("../icon");
var use_default_1 = require("../_util/use-default");
var config_context_1 = require("../_util/config-context");
var MenuContext_1 = require("./MenuContext");
var noop_1 = require("../_util/noop");
exports.SubMenuContext = react_1.createContext({
    inSubMenu: false,
    setHasTag: noop_1.noop,
    onSelectedChange: function () { },
});
function SubMenu(_a) {
    var _b, _c, _d;
    var title = _a.title, icon = _a.icon, children = _a.children, _e = _a.defaultOpened, defaultOpened = _e === void 0 ? false : _e, opened = _a.opened, onOpenedChange = _a.onOpenedChange, className = _a.className, style = _a.style;
    var classPrefix = config_context_1.useConfig().classPrefix;
    // 子菜单中包含 Tag
    var _f = tslib_1.__read(react_1.useState(false), 2), hasTag = _f[0], setHasTag = _f[1];
    // 子菜单被选中项
    var _g = tslib_1.__read(react_1.useState(null), 2), selectedId = _g[0], setSelectedId = _g[1];
    var collapsed = react_1.useContext(MenuContext_1.MenuContext).collapsed;
    // eslint-disable-next-line no-param-reassign
    _b = tslib_1.__read(use_default_1.useDefault(opened, defaultOpened, onOpenedChange), 2), opened = _b[0], onOpenedChange = _b[1];
    var defaultIcon;
    var activeIcon;
    if (typeof icon === "string") {
        defaultIcon = icon;
        activeIcon = icon;
    }
    if (Array.isArray(icon)) {
        _c = tslib_1.__read(icon, 2), defaultIcon = _c[0], activeIcon = _c[1];
    }
    return (react_1.default.createElement("li", { className: classnames_1.default(classPrefix + "-menu__submenu", className, (_d = {},
            _d[classPrefix + "-menu__subbadge"] = hasTag && !opened,
            _d["is-selected"] = !!selectedId && (collapsed || !opened),
            _d["is-expanded"] = opened,
            _d)), style: style },
        react_1.default.createElement("a", { className: classPrefix + "-menu__item", onClick: function () { return onOpenedChange(!opened); } },
            defaultIcon && (react_1.default.createElement("img", { className: classPrefix + "-menu__list-icon", src: defaultIcon, alt: "icon" })),
            activeIcon && (react_1.default.createElement("img", { className: classPrefix + "-menu__list-icon is-selected", src: activeIcon, alt: "icon" })),
            react_1.default.createElement("div", { className: classPrefix + "-menu__text" }, title),
            react_1.default.createElement(icon_1.Icon, { type: "arrowdown" })),
        react_1.default.createElement("ul", { className: classPrefix + "-menu__list" },
            react_1.default.createElement(exports.SubMenuContext.Provider, { value: {
                    inSubMenu: true,
                    setHasTag: setHasTag,
                    onSelectedChange: function (id, selected) {
                        return setSelectedId(function (selectedId) {
                            if (selected) {
                                return id;
                            }
                            if (id === selectedId) {
                                return null;
                            }
                            return selectedId;
                        });
                    },
                } }, children))));
}
exports.SubMenu = SubMenu;
//# sourceMappingURL=SubMenu.js.map