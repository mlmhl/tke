"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var create_rocket_1 = require("../_util/create-rocket");
var forward_ref_with_statics_1 = require("../_util/forward-ref-with-statics");
var justify_1 = require("../justify");
var config_context_1 = require("../_util/config-context");
var heading_1 = require("../heading");
var CardHeader = create_rocket_1.createRocket("CardHeader", "div.@{prefix}-card__header");
var CardFooter = create_rocket_1.createRocket("CardFooter", "div.@{prefix}-card__footer");
var CardBody = react_1.forwardRef(function (props, ref) {
    var classPrefix = config_context_1.useConfig().classPrefix;
    var className = props.className, style = props.style, title = props.title, subtitle = props.subtitle, operation = props.operation, children = props.children;
    return (react_1.default.createElement("div", { ref: ref, className: classnames_1.default(classPrefix + "-card__body", className), style: style },
        (title || subtitle || operation) && (react_1.default.createElement("div", { className: classPrefix + "-card__title" },
            react_1.default.createElement(justify_1.Justify, { left: react_1.default.createElement(heading_1.H3, null,
                    title,
                    subtitle && (react_1.default.createElement("span", { className: classPrefix + "-card__subtitle" }, subtitle))), right: operation }))),
        react_1.default.createElement("div", { className: classPrefix + "-card__content" }, children)));
});
exports.Card = forward_ref_with_statics_1.forwardRefWithStatics(function (_a, ref) {
    var _b;
    var className = _a.className, children = _a.children, bordered = _a.bordered, full = _a.full, props = tslib_1.__rest(_a, ["className", "children", "bordered", "full"]);
    var classPrefix = config_context_1.useConfig().classPrefix;
    var cardClassName = classnames_1.default(classPrefix + "-card", (_b = {},
        _b[classPrefix + "-card--bordered"] = bordered,
        _b[classPrefix + "-card--full"] = full === true,
        _b[classPrefix + "-card--full-with-header"] = full === "withHeader",
        _b), className);
    return (react_1.default.createElement("div", tslib_1.__assign({ ref: ref, className: cardClassName }, props), children));
}, 
// Card statics
{
    Header: CardHeader,
    Body: CardBody,
    Footer: CardFooter,
});
exports.Card.displayName = "Card";
//# sourceMappingURL=Card.js.map