"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var imagepreview_1 = require("../../imagepreview");
var config_context_1 = require("../../_util/config-context");
var UploadContext_1 = require("../UploadContext");
var text_1 = require("../../text");
function Dragger(_a) {
    var _b, _c;
    var filename = _a.filename, image = _a.image, percent = _a.percent, button = _a.button, description = _a.description, children = _a.children;
    var classPrefix = config_context_1.useConfig().classPrefix;
    var _d = react_1.useContext(UploadContext_1.UploadContext), isDragging = _d.isDragging, getDraggerProps = _d.getDraggerProps;
    if (filename) {
        return (react_1.default.createElement("div", { className: classPrefix + "-form-upload-drag" },
            react_1.default.createElement("div", { className: classPrefix + "-form-upload__inner" },
                react_1.default.createElement("div", { className: classPrefix + "-form-upload__box" },
                    image && (react_1.default.createElement("div", { className: classPrefix + "-form-upload__thumb" },
                        react_1.default.createElement(imagepreview_1.ImagePreview, { className: classPrefix + "-form-upload__preview", previewSrc: image, src: image }))),
                    react_1.default.createElement("div", { className: classPrefix + "-form-upload__info" },
                        react_1.default.createElement("div", { className: classPrefix + "-form-upload__file" },
                            react_1.default.createElement("span", { className: classPrefix + "-text" }, filename),
                            (percent || percent === 0) && (react_1.default.createElement("span", { className: classPrefix + "-form__help-text--inline" },
                                Math.floor(percent),
                                "%"))),
                        react_1.default.createElement("div", { className: classPrefix + "-form-upload__intro " + classPrefix + "-text-weak" }, description),
                        react_1.default.createElement("div", { className: classPrefix + "-form-upload__btn" }, button))))));
    }
    return (react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-form-upload-drag", (_b = {},
            _b[classPrefix + "-form-upload-drag--drag"] = isDragging,
            _b)) },
        react_1.default.createElement("div", tslib_1.__assign({}, getDraggerProps({ className: classPrefix + "-form-upload__inner" })),
            react_1.default.createElement(text_1.Text, { theme: "text", className: classnames_1.default(classPrefix + "-text__upload-drag", (_c = {},
                    _c[classPrefix + "-text__upload-drag--hover"] = isDragging,
                    _c)), parent: "p" }, children))));
}
exports.Dragger = Dragger;
//# sourceMappingURL=Dragger.js.map