import React from "react";
import { Moment } from "moment";
import { ChangeContext } from "../../form/controlled";
import { JumperProps } from "../../jumper";
import { CalendarTableType } from "../DateProps";
export declare enum CellStatus {
    Common = 0,
    Selected = 1,
    InRange = 2,
    InRangeHover = 3,
    RangeStart = 4,
    RangeEnd = 5
}
export interface TableProps extends React.Props<any> {
    /**
     * 标题渲染
     */
    caption?: React.ReactNode;
    /**
     * Jumper 配置
     */
    jumperOptions?: JumperProps;
    /**
     * table 类型
     */
    type?: CalendarTableType;
}
declare const Table: (({ caption, children, jumperOptions, type }: TableProps) => JSX.Element) & {
    Row: typeof TableRow;
    Cell: typeof Cell;
};
export default Table;
export declare function TableRow({ children }: {
    children: React.ReactNode;
}): JSX.Element;
export interface Cell {
    /**
     * 展示名称
     */
    name: string | number;
    /**
     * 对应日期值
     */
    value?: Moment;
    /**
     * 被选中回调
     */
    onSelect?: (value: Moment, context: ChangeContext) => void;
    /**
     * Outside 日期被选中回调
     */
    onOutsideSelect?: (current: Moment) => void;
    /**
     * Hover 日期被选中回调
     */
    onHoveredChange?: (current: Moment) => void;
    /**
     * 是否为当前时间
     */
    isNow?: boolean;
    /**
     * 是否在当前时间外
     */
    outside?: boolean;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 状态
     */
    status?: CellStatus;
}
export declare function Cell({ name, value, onSelect, onOutsideSelect, onHoveredChange, isNow, outside, disabled, status, }: Cell): JSX.Element;
