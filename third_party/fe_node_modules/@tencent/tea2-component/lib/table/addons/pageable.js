"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var Pagination_1 = require("../../pagination/Pagination");
function pageable(options) {
    if (options === void 0) { options = {}; }
    return {
        onInjectTable: function (render) { return function (props) {
            var records = props.records;
            var _a = options.recordCount, recordCount = _a === void 0 ? records.length : _a, paginationProps = tslib_1.__rest(options, ["recordCount"]);
            return (react_1.default.createElement(TablePagination, tslib_1.__assign({ tableProps: props, tableRender: render }, paginationProps, { recordCount: recordCount })));
        }; },
    };
}
exports.pageable = pageable;
function TablePagination(_a) {
    var 
    // Table
    tableRender = _a.tableRender, tableProps = _a.tableProps, 
    // Pagination
    recordCount = _a.recordCount, pageSizeOptions = _a.pageSizeOptions, pageIndex = _a.pageIndex, pageSize = _a.pageSize, _b = _a.onPagingChange, onPagingChange = _b === void 0 ? function () { } : _b, props = tslib_1.__rest(_a, ["tableRender", "tableProps", "recordCount", "pageSizeOptions", "pageIndex", "pageSize", "onPagingChange"]);
    if (!Array.isArray(pageSizeOptions) || pageSizeOptions.length === 0) {
        pageSizeOptions = Pagination_1.defaultPageSizeOptions; // eslint-disable-line no-param-reassign
    }
    // 为非受控组件提供状态管理
    var _c = tslib_1.__read(react_1.useState({
        pageIndex: 1,
        pageSize: pageSizeOptions[0],
    }), 2), internalPaging = _c[0], setInternalPaging = _c[1];
    // 非受控组件，使用内部状态
    if (typeof pageIndex === "undefined") {
        // eslint-disable-next-line prefer-destructuring,no-param-reassign
        pageIndex = internalPaging.pageIndex;
    }
    if (typeof pageSize === "undefined") {
        // eslint-disable-next-line prefer-destructuring,no-param-reassign
        pageSize = internalPaging.pageSize;
    }
    // 状态改变同时更新内部状态和通知外部
    // eslint-disable-next-line no-param-reassign
    onPagingChange = (function (onPagingChange) { return function (query) {
        setInternalPaging(query);
        onPagingChange(query);
    }; })(onPagingChange);
    var records = tableProps.records;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        tableRender(tslib_1.__assign(tslib_1.__assign({}, tableProps), { records: records.length < recordCount
                ? records
                : records.slice((pageIndex - 1) * pageSize, pageIndex * pageSize) })),
        react_1.default.createElement(Pagination_1.Pagination, tslib_1.__assign({}, props, { recordCount: recordCount, pageSizeOptions: pageSizeOptions, pageIndex: pageIndex, pageSize: pageSize, onPagingChange: onPagingChange }))));
}
//# sourceMappingURL=pageable.js.map