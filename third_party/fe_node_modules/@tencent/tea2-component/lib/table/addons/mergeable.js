"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
function mergeable(_a) {
    var _b = _a.headColSpan, headColSpan = _b === void 0 ? function () { return undefined; } : _b, _c = _a.colSpan, bodyColSpan = _c === void 0 ? function () { return undefined; } : _c, _d = _a.rowSpan, bodyRowSpan = _d === void 0 ? function () { return undefined; } : _d;
    return {
        onInjectColumn: function (previous) { return function (record, rowKey, recordIndex, column, columnIndex) {
            var _a = previous(record, rowKey, recordIndex, column, columnIndex), prevProps = _a.props, result = tslib_1.__rest(_a, ["props"]);
            var colSpan;
            var rowSpan;
            if (recordIndex === -1) {
                var col = headColSpan(columnIndex, { column: column });
                colSpan = typeof col === "number" ? col : undefined;
            }
            else {
                var col = bodyColSpan(columnIndex, recordIndex, {
                    record: record,
                    rowKey: rowKey,
                    column: column,
                });
                var row = bodyRowSpan(columnIndex, recordIndex, {
                    record: record,
                    rowKey: rowKey,
                    column: column,
                });
                colSpan = typeof col === "number" ? col : undefined;
                rowSpan = typeof row === "number" ? row : undefined;
            }
            var props = tslib_1.__assign(tslib_1.__assign({}, prevProps), { colSpan: colSpan,
                rowSpan: rowSpan });
            return tslib_1.__assign(tslib_1.__assign({}, result), { props: props });
        }; },
    };
}
exports.mergeable = mergeable;
//# sourceMappingURL=mergeable.js.map