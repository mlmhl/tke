"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var button_1 = require("../../button");
var fallbackColumnKey = "__removeable_addon__";
var rowDisabled = null;
function removeable(_a) {
    var _b = _a.onRemove, onRemove = _b === void 0 ? function () { return null; } : _b, _c = _a.width, width = _c === void 0 ? 46 : _c, _d = _a.icon, icon = _d === void 0 ? "dismiss" : _d;
    return {
        onInjectProps: function (props) {
            rowDisabled = props.rowDisabled || (function () { return false; });
            var columns = tslib_1.__spread(props.columns, [
                {
                    key: fallbackColumnKey,
                    header: "",
                    width: width,
                    render: function () { return null; },
                },
            ]);
            return tslib_1.__assign(tslib_1.__assign({}, props), { columns: columns });
        },
        onInjectColumn: function (previous) { return function (record, rowKey, recordIndex, column, columnIndex) {
            // 不是目标列
            if (column.key !== fallbackColumnKey) {
                return previous(record, rowKey, recordIndex, column, columnIndex);
            }
            var _a = previous(record, rowKey, recordIndex, column, columnIndex), preChildren = _a.children, props = _a.props, result = tslib_1.__rest(_a, ["children", "props"]);
            var children = preChildren;
            // 非表头
            if (recordIndex !== -1 && !rowDisabled(record)) {
                children = (react_1.default.createElement(button_1.Button, { type: "icon", icon: icon, htmlType: "button", onClick: function (event) { return onRemove(rowKey, { event: event, record: record }); } }));
            }
            return tslib_1.__assign(tslib_1.__assign({}, result), { props: props, children: children });
        }; },
    };
}
exports.removeable = removeable;
//# sourceMappingURL=removeable.js.map