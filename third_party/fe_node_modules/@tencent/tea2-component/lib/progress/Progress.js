"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var inject_value_1 = require("../_util/inject-value");
var config_context_1 = require("../_util/config-context");
function Progress(_a) {
    var _b;
    var _c = _a.type, type = _c === void 0 ? "line" : _c, _d = _a.percent, percent = _d === void 0 ? 0 : _d, text = _a.text, tips = _a.tips, _e = _a.theme, theme = _e === void 0 ? +percent === 100 ? "success" : "default" : _e, className = _a.className, style = _a.style;
    var classPrefix = config_context_1.useConfig().classPrefix;
    // Circle
    if (type === "circle") {
        return (react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-progress-circle", className, {
                "is-error": theme === "danger",
                "is-success": theme === "success",
            }), style: style },
            react_1.default.createElement("div", { className: classPrefix + "-progress-circle__area" },
                react_1.default.createElement("div", { className: classPrefix + "-progress-circle__svg-path" },
                    react_1.default.createElement("svg", { version: "1.1", id: "\u56FE\u5C42_1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", x: "0px", y: "0px", width: "160px", height: "160px", viewBox: "0 0 160 160", xmlSpace: "preserve" },
                        react_1.default.createElement("circle", { className: classPrefix + "-progress-circle__base-ring", fill: "none", strokeWidth: "2", cx: "80", cy: "80", r: "69" }),
                        react_1.default.createElement("circle", { className: classPrefix + "-progress-circle__current-ring", fill: "none", strokeWidth: "2", cx: "80", cy: "80", r: "69", style: {
                                strokeDasharray: (434 * percent) / 100 + "px 434px",
                                transition: "stroke-dasharray .2s",
                            } }))),
                react_1.default.createElement("div", { className: classPrefix + "-progress-circle__current-text", id: "progress-num" }, text ? (react_1.default.createElement("span", { className: "text--chinese" }, inject_value_1.injectValue(text)(percent))) : (react_1.default.createElement(react_1.default.Fragment, null,
                    percent,
                    react_1.default.createElement("i", { className: "text--symbol" }, "%"))))),
            react_1.default.createElement("div", { className: classPrefix + "-progress-circle__tips" }, tips)));
    }
    return (react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-progress", className, (_b = {},
            _b[classPrefix + "-progress--error"] = theme === "danger",
            _b[classPrefix + "-progress--succeed"] = theme === "success",
            _b)), style: style },
        react_1.default.createElement("div", { className: classPrefix + "-progress__value", style: { width: percent + "%", transition: "width .2s" } }, text && (react_1.default.createElement("span", { className: classPrefix + "-progress__text" }, inject_value_1.injectValue(text)(percent))))));
}
exports.Progress = Progress;
//# sourceMappingURL=Progress.js.map