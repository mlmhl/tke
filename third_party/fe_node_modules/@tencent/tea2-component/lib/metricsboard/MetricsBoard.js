"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var react_1 = tslib_1.__importDefault(require("react"));
var config_context_1 = require("../_util/config-context");
var create_rocket_1 = require("../_util/create-rocket");
var forward_ref_with_statics_1 = require("../_util/forward-ref-with-statics");
exports.MetricsBoard = forward_ref_with_statics_1.forwardRefWithStatics(function (_a, ref) {
    var _b;
    var title = _a.title, value = _a.value, unit = _a.unit, _c = _a.infos, infos = _c === void 0 ? [] : _c, onClick = _a.onClick, className = _a.className, style = _a.style;
    var classPrefix = config_context_1.useConfig().classPrefix;
    var hasOnClick = typeof onClick === "function";
    return (react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-metrics-board", className, (_b = {},
            _b[classPrefix + "-metrics-board--link"] = hasOnClick,
            _b)), style: style, onClick: hasOnClick ? onClick : function () { return null; }, ref: ref },
        react_1.default.createElement("div", { className: classPrefix + "-metrics-board__header" },
            react_1.default.createElement("div", { className: classPrefix + "-metrics-board__header-title" }, title)),
        react_1.default.createElement("div", { className: classPrefix + "-metrics-board__body" },
            react_1.default.createElement("div", { className: classPrefix + "-metrics-board__value" },
                react_1.default.createElement("span", { className: classPrefix + "-metrics-board__number" }, value),
                react_1.default.createElement("span", { className: classPrefix + "-metrics-board__unit" },
                    " ",
                    unit)),
            react_1.default.createElement("div", { className: classPrefix + "-metrics-board__info" }, infos.map(function (info, index) { return (react_1.default.createElement("div", { className: classPrefix + "-metrics-board__info-item", key: index }, info)); })))));
}, {
    InfoLabel: create_rocket_1.createRocket("MetricsBoardInfoLabel", "label.@{prefix}-metrics-board__info-label"),
    InfoKey: create_rocket_1.createRocket("MetricsBoardInfoKey", "label.@{prefix}-metrics-board__info-key"),
});
exports.MetricsBoard.displayName = "MetricsBoard";
//# sourceMappingURL=MetricsBoard.js.map