"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var form_1 = require("../form");
var popover_1 = require("../popover");
var input_1 = require("../input");
var icon_1 = require("../icon");
var i18n_1 = require("../i18n");
var CascaderBox_1 = require("./CascaderBox");
var use_default_1 = require("../_util/use-default");
var config_context_1 = require("../_util/config-context");
var tag_1 = require("../tag");
var noop_1 = require("../_util/noop");
function isEqual(a, b) {
    return a.length === b.length && a.every(function (str, i) { return str === b[i]; });
}
function CascaderMultiple(props) {
    var t = i18n_1.useTranslation();
    var classPrefix = config_context_1.useConfig().classPrefix;
    var _a = form_1.useDefaultValue(props, []), data = _a.data, valueList = _a.value, onChange = _a.onChange, onLoad = _a.onLoad, disabled = _a.disabled, className = _a.className, style = _a.style, _b = _a.placeholder, placeholder = _b === void 0 ? t.pleaseSelect : _b, _c = _a.defaultOpen, defaultOpen = _c === void 0 ? false : _c, open = _a.open, _d = _a.onOpenChange, onOpenChange = _d === void 0 ? noop_1.noop : _d, _e = _a.placement, placement = _e === void 0 ? "bottom-start" : _e, _f = _a.placementOffset, placementOffset = _f === void 0 ? 5 : _f, _g = _a.closeOnScroll, closeOnScroll = _g === void 0 ? true : _g, escapeWithReference = _a.escapeWithReference, overlayClassName = _a.overlayClassName, overlayStyle = _a.overlayStyle, clearable = _a.clearable;
    var _h = tslib_1.__read(react_1.useState(false), 2), hover = _h[0], setHover = _h[1];
    var scheduleUpdateRef = react_1.useRef(null);
    react_1.useEffect(function () {
        if (scheduleUpdateRef.current) {
            scheduleUpdateRef.current();
        }
    }, [valueList]);
    var _j = tslib_1.__read(use_default_1.useDefault(open, defaultOpen, onOpenChange), 2), isOpened = _j[0], setIsOpened = _j[1];
    var optionsList = valueList.map(function (v) { return CascaderBox_1.getOptions(data, v); });
    var onSelect = function (value, context) {
        var next = tslib_1.__spread(valueList, [value]);
        onChange(next, tslib_1.__assign(tslib_1.__assign({}, context), { options: next.map(function (v) { return CascaderBox_1.getOptions(data, v); }) }));
    };
    var onDeselect = function (value, context) {
        var next = valueList.filter(function (v) { return !isEqual(v, value); });
        onChange(next, tslib_1.__assign(tslib_1.__assign({}, context), { options: next.map(function (v) { return CascaderBox_1.getOptions(data, v); }) }));
    };
    return (react_1.default.createElement(popover_1.Popover, { trigger: disabled ? "empty" : "click", visible: isOpened, onVisibleChange: setIsOpened, placement: placement || "bottom-start", placementOffset: placementOffset, closeOnScroll: closeOnScroll, escapeWithReference: escapeWithReference, overlayClassName: overlayClassName, overlayStyle: overlayStyle, overlay: function (_a) {
            var scheduleUpdate = _a.scheduleUpdate;
            scheduleUpdateRef.current = scheduleUpdate;
            return (react_1.default.createElement(CascaderBox_1.CascaderBox, { multiple: true, data: data, onChange: onSelect, onLoad: onLoad, onClose: function () { return setIsOpened(false); }, changeOnSelect: false, scheduleUpdate: scheduleUpdate, classPrefix: classPrefix, isSelected: function (value) { return !!valueList.find(function (v) { return isEqual(v, value); }); }, onDeselect: onDeselect }));
        } },
        react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-cascader", className), style: style, onMouseEnter: function () { return setHover(true); }, onMouseLeave: function () { return setHover(false); } },
            react_1.default.createElement("div", { className: classPrefix + "-cascader__input" },
                react_1.default.createElement("div", { className: classPrefix + "-cascader__value" },
                    react_1.default.createElement(tag_1.Tag.Group, null, optionsList.map(function (options, index) {
                        var _a = options[options.length - 1], _b = _a.value, value = _b === void 0 ? undefined : _b, _c = _a.label, label = _c === void 0 ? undefined : _c;
                        return (react_1.default.createElement(tag_1.Tag, { key: value, onClose: function (event) {
                                event.stopPropagation();
                                var next = valueList.filter(function (_, i) { return i !== index; });
                                onChange(next, {
                                    event: event,
                                    options: next.map(function (v) { return CascaderBox_1.getOptions(data, v); }),
                                });
                            } }, label || value));
                    }))),
                react_1.default.createElement(input_1.Input, { readonly: true, autoComplete: "off", placeholder: valueList.length ? "" : placeholder })),
            clearable && hover && valueList.length ? (react_1.default.createElement(icon_1.Icon, { type: "dismiss", onClick: function (event) {
                    event.stopPropagation();
                    onChange([], { event: event, options: [] });
                } })) : (react_1.default.createElement(icon_1.Icon, { type: "arrowdown" })))));
}
exports.CascaderMultiple = CascaderMultiple;
CascaderMultiple.defaultLabelAlign = "middle";
//# sourceMappingURL=CascaderMultiple.js.map