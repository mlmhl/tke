"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var util_1 = require("../util");
var form_1 = require("../form");
var forward_ref_with_statics_1 = require("../_util/forward-ref-with-statics");
exports.MonacoDiffEditor = forward_ref_with_statics_1.forwardRefWithStatics(function MonacoEditor(_a, ref) {
    var monaco = _a.monaco, original = _a.original, _b = _a.options, options = _b === void 0 ? {} : _b, language = _a.language, className = _a.className, style = _a.style, width = _a.width, height = _a.height, props = tslib_1.__rest(_a, ["monaco", "original", "options", "language", "className", "style", "width", "height"]);
    var classPrefix = util_1.useConfig().classPrefix;
    var _c = form_1.useDefaultValue(props, ""), value = _c.value, onChange = _c.onChange;
    var containerRef = react_1.useRef(null);
    var editorRef = react_1.useRef(null);
    var changeEventRef = react_1.useRef(null);
    // https://github.com/react-monaco-editor/react-monaco-editor/blob/master/src/editor.js
    var preventTriggerChangeEvent = react_1.useRef(false);
    react_1.useEffect(function () {
        if (editorRef.current) {
            editorRef.current.layout();
        }
    }, [width, height]);
    react_1.useEffect(function () {
        if (editorRef.current) {
            var originalModel = editorRef.current.getModel().original;
            originalModel.setValue(original);
        }
    }, [original, monaco]);
    react_1.useEffect(function () {
        if (editorRef.current) {
            var _a = editorRef.current.getModel(), modifiedModel = _a.modified, originalModel = _a.original;
            monaco.editor.setModelLanguage(modifiedModel, language);
            monaco.editor.setModelLanguage(originalModel, language);
        }
    }, [language, monaco]);
    react_1.useEffect(function () {
        if (editorRef.current) {
            var editor = editorRef.current;
            var modifiedModel = editor.getModel().modified;
            if (value != null && value !== modifiedModel.getValue()) {
                preventTriggerChangeEvent.current = true;
                editor.getModifiedEditor().pushUndoStop();
                modifiedModel.pushEditOperations([], [
                    {
                        range: modifiedModel.getFullModelRange(),
                        text: value,
                    },
                ], undefined);
                editor.getModifiedEditor().pushUndoStop();
                preventTriggerChangeEvent.current = false;
            }
        }
    }, [value, monaco]);
    react_1.useLayoutEffect(function () {
        var editor = monaco.editor.createDiffEditor(containerRef.current, tslib_1.__assign({}, options));
        editorRef.current = editor;
        var originalModel = monaco.editor.createModel(original, language);
        var modifiedModel = monaco.editor.createModel(value, language);
        editor.setModel({
            original: originalModel,
            modified: modifiedModel,
        });
        changeEventRef.current = modifiedModel.onDidChangeContent(function (event) {
            if (!preventTriggerChangeEvent.current) {
                onChange(modifiedModel.getValue(), { event: event });
            }
        });
        return function () {
            editorRef.current.dispose();
            originalModel.dispose();
            modifiedModel.dispose();
            if (changeEventRef.current) {
                changeEventRef.current.dispose();
            }
        };
    }, []); // eslint-disable-line react-hooks/exhaustive-deps
    react_1.useImperativeHandle(ref, function () { return ({
        editor: editorRef.current,
    }); });
    return (react_1.default.createElement("div", { className: classnames_1.default(classPrefix + "-monaco-editor-container", className), style: tslib_1.__assign(tslib_1.__assign({}, (style || {})), { height: height || "100%", width: width || "100%" }), ref: containerRef }));
}, {});
//# sourceMappingURL=MonacoDiffEditor.js.map