import React from "react";
import { StyledProps } from "../_type";
export interface MonacoEditorProps extends StyledProps {
    /**
     * [monaco-editor](https://microsoft.github.io/monaco-editor/index.html)
     *
     * @docType typeof monaco
     */
    monaco: typeof import("monaco-editor");
    /**
     * 编辑器高度
     *
     * @default "100%"
     */
    height?: React.CSSProperties["height"];
    /**
     * 编辑器宽度
     *
     * @default "100%"
     */
    width?: React.CSSProperties["width"];
    /**
     * 编辑器初始语言
     */
    language?: string;
    /**
     * 编辑器初始设置，详见 [IStandaloneEditorConstructionOptions](https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.istandaloneeditorconstructionoptions.html)
     *
     * @docType IStandaloneEditorConstructionOptions
     */
    options?: import("monaco-editor").editor.IStandaloneEditorConstructionOptions;
    /**
     * 编辑器默认文本
     */
    defaultValue?: string;
    /**
     * 编辑器文本
     */
    value?: string;
    /**
     * 编辑器文本变化回调
     */
    onChange?: (value: string, context: {
        event: import("monaco-editor").editor.IModelContentChangedEvent;
    }) => void;
}
export declare const MonacoEditor: React.FunctionComponent<MonacoEditorProps & React.RefAttributes<{
    editor: import("monaco-editor").editor.IStandaloneCodeEditor;
}>> & {
    DiffEditor: React.FunctionComponent<import("./MonacoDiffEditor").MonacoDiffEditorProps & React.RefAttributes<{
        editor: import("monaco-editor").editor.IDiffEditor;
    }>>;
};
