import React from "react";
import classNames from "classnames";
import { Combine, StyledProps, Omit } from "../_type";
import { ControlledProps, useDefaultValue } from "../form/controlled";
import { forwardRefWithStatics } from "../_util/forward-ref-with-statics";

export type SizeType = "full" | "l" | "m" | "s" | "xs";

type InputElements = HTMLInputElement | HTMLTextAreaElement;

/**
 * Input 组件支持的属性。
 *
 * 除表格中列出的属性外，支持透传原生 `<input>` 或 `<textarea>` 标签支持的属性。
 */
export interface InputProps
  extends Combine<
    StyledProps,
    ControlledProps<string>,
    Omit<
      React.InputHTMLAttributes<HTMLInputElement> &
        React.TextareaHTMLAttributes<HTMLTextAreaElement>,
      "onChange" | "size"
    >
  > {
  /**
   * 是否多行输入
   */
  multiline?: boolean;

  /**
   * Input 组件不应该传入 children
   */
  children?: never;

  /**
   * 占位符
   */
  placeholder?: string;

  /**
   * 是否禁用
   * @default false
   */
  disabled?: boolean;

  /**
   * 是否为只读模式
   * @default false
   */
  readonly?: boolean;

  /**
   * 最大输入长度
   */
  maxLength?: number;

  /**
   * 原生 `<input>` 标签 `type` 属性
   */
  type?: React.InputHTMLAttributes<HTMLInputElement>["type"];

  /**
   * 输入框尺寸，使用 full 撑满容器宽度
   */
  size?: SizeType;

  /**
   * 改变 Input 的基本样式类名，不建议使用
   */
  baseClassName?: string;
}

export const Input = forwardRefWithStatics(
  (
    props: InputProps,
    ref: React.Ref<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const {
      multiline,
      children, // never used
      placeholder,
      disabled,
      readonly,
      size,
      type,
      baseClassName,
      className,
      style,
      value,
      onChange,
      ...restProps
    } = useDefaultValue(props, "");

    const basename = baseClassName || `tea-${multiline ? "textarea" : "input"}`;
    const inputClassName = classNames({
      [basename]: true,
      [className]: className,
      [`size-${size === "full" ? `${size}-width` : size}`]: size,
    });

    const hasRows = multiline && restProps.rows;

    const inputProps = {
      placeholder,
      className: inputClassName,
      readOnly: readonly,
      disabled,
      // 受样式限制 rows 属性没有生效
      style: hasRows ? { height: "auto", ...(style || {}) } : style,
      value,
      onChange: (event: React.ChangeEvent<InputElements>) =>
        onChange(event.target.value, { event }),
      ...restProps,
    };

    return multiline ? (
      <textarea ref={ref as React.Ref<HTMLTextAreaElement>} {...inputProps} />
    ) : (
      <input
        ref={ref as React.Ref<HTMLInputElement>}
        type={type}
        {...inputProps}
      />
    );
  },
  {
    // Input statics

    /**
     * 在表单布局中，和 label 的默认对齐方式
     */
    defaultLabelAlign: "middle",
  }
);

Input.displayName = "Input";
