import React, { useState, useRef } from "react";
import { Upload } from "@tea/component/upload";
import { Button } from "@tea/component/button";
import { Form } from "@tea/component/form";
import { Input } from "@tea/component/input";
import { Modal } from "@tea/component/modal";

export default function SingleFileUploadExample() {
  const [file, setFile] = useState(null);
  const [percent, setPercent] = useState(null);
  const [status, setStatus] = useState(null);

  const xhrRef = useRef(null);

  function handleStart(file, { xhr }) {
    setFile(file);
    setStatus("validating");
    xhrRef.current = xhr;
  }

  function handleProgress({ percent }) {
    setPercent(percent);
  }

  function handleSuccess(result) {
    console.log(result);
    setStatus("success");
  }

  function handleError(error) {
    console.error(error);
    handleAbort();
    Modal.alert({
      type: "error",
      message: "错误",
      description: "请求服务器失败",
    });
  }

  function beforeUpload(file, fileList, isAccepted) {
    if (!isAccepted) {
      setStatus("error");
    }
    return isAccepted;
  }

  function handleAbort() {
    if (xhrRef.current) {
      xhrRef.current.abort();
    }
    setFile(null);
    setStatus(null);
    setPercent(null);
  }

  return (
    <Form.Control
      status={status}
      message="请上传 png 格式文件，大小 100KB 以内"
    >
      <Upload
        action="//jsonplaceholder.typicode.com/posts/"
        accept="image/png"
        maxSize={100 * 1024}
        onStart={handleStart}
        onProgress={handleProgress}
        onSuccess={handleSuccess}
        onError={handleError}
        beforeUpload={beforeUpload}
      >
        {({ open }) => (
          <div className="tea-form-upload">
            <div className="tea-form-upload__inner">
              <Input readonly placeholder={file ? file.name : ""} />
              {percent && (
                <span className="tea-form__help-text--inline">
                  {Math.floor(percent)}%
                </span>
              )}
            </div>
            {status === "validating" ? (
              <Button onClick={handleAbort}>取消上传</Button>
            ) : (
              <Button onClick={open}>{status ? "重新上传" : "选择文件"}</Button>
            )}
          </div>
        )}
      </Upload>
    </Form.Control>
  );
}
