import React from "react";
import { isChildOfType } from "../_util/is-child-of-type";

export interface RegionPanelProps {
  /**
   * 地域选择面板的内容
   *
   * 可以包含 `RegionPanel.Head` 及 `RegionPanel.Column`
   */
  children?: React.ReactNode;
}

/**
 * 地域选择布局面板
 */
export function RegionPanel({ children }: RegionPanelProps) {
  let allOptionElement = null;
  const otherChildElements = [];

  React.Children.forEach(children, child => {
    if (isChildOfType(child, RegionPanelHead)) {
      allOptionElement = child;
    } else {
      otherChildElements.push(child);
    }
  });

  return (
    <div className="tea-region">
      {allOptionElement}
      <div className="tea-region__list">{otherChildElements}</div>
    </div>
  );
}

RegionPanel.Head = RegionPanelHead;
RegionPanel.Column = RegionPanelColumn;
RegionPanel.Group = RegionPanelGroup;

interface RegionPanelHeadProps {
  /**
   * 地域面板头部，可以用于包含所有地域的选项
   */
  children: React.ReactNode;
}
function RegionPanelHead({ children }: RegionPanelHeadProps) {
  return <div className="tea-region__title">{children}</div>;
}

interface RegionPanelColumnProps {
  /**
   * 包含地域分组 `RegionPanel.Group`
   */
  children: React.ReactNode;
}
function RegionPanelColumn({ children }: RegionPanelColumnProps) {
  return <div className="tea-region__col">{children}</div>;
}

interface RegionPanelGroupProps {
  /**
   * 地域分组名称，如果 "中国大陆"
   */
  name?: string;

  /**
   * 地域分组，应该包含一个或多个地域选项 `RegionOption`
   */
  children?: React.ReactNode;
}
function RegionPanelGroup({ name, children }: RegionPanelGroupProps) {
  return (
    <div className="tea-region__unit">
      {name && <div className="tea-region__type">{name}</div>}
      {children}
    </div>
  );
}
