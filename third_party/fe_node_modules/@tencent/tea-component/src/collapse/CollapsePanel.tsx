import React, { useContext } from "react";
import classNames from "classnames";
import { CollapseContext } from "./CollapseContext";
import { Icon } from "../icon";
import { StyledProps } from "../_type";

export interface CollapsePanelProps extends StyledProps {
  /**
   * 面板唯一标识
   */
  id: string;

  /**
   * 头部标题
   */
  title?: React.ReactNode;

  /**
   * 头部标题
   */
  content?: React.ReactNode;
}

export function CollapsePanel({
  id,
  title,
  content,
  className,
  style,
}: CollapsePanelProps) {
  const { activeIds, onActive } = useContext(CollapseContext);
  const active = activeIds.includes(id);

  function handleClick(event: React.MouseEvent) {
    const context = { event };
    if (active) {
      onActive(activeIds.filter(activeId => activeId !== id), context);
    } else {
      onActive([...activeIds, id], context);
    }
  }

  return (
    <div
      className={classNames("tea-accordion", className, {
        "is-active": active,
      })}
      style={style}
    >
      <div className="tea-accordion__header">
        <Icon type={active ? "arrowup" : "arrowdown"} />
        <span className="tea-accordion__header-title" onClick={handleClick}>
          {title}
        </span>
      </div>
      <div className="tea-accordion__body">{content}</div>
    </div>
  );
}
