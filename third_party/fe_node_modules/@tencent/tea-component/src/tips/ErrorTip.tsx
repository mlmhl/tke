import React from "react";
import classNames from "classnames";
import { Icon } from "../icon";
import { Text } from "../text";
import { useTranslation } from "../i18n";
import { StyledProps } from "../_type";

export interface ErrorTipProps extends StyledProps {
  /**
   * 错误文案
   * @default "加载失败"
   */
  errorText?: React.ReactNode;

  /**
   * 重试文案
   * @default "重试"
   */
  retryText?: React.ReactNode;

  /**
   * 重试时回调，如果传空，则不进行重试
   */
  onRetry?: () => void;

  /**
   * 隐藏图标
   * @default false
   */
  hideIcon?: boolean;
}

export function ErrorTip(props: ErrorTipProps) {
  const t = useTranslation();
  const {
    errorText = t.loadErrorText,
    retryText = t.loadRetryText,
    onRetry,
    hideIcon,
    className,
    style,
  } = props;
  return (
    <span className={classNames("tea-action-state", className)} style={style}>
      {!hideIcon && <Icon type="error" className="tea-mr-2n" />}
      {typeof errorText === "string" ? (
        <Text className="tea-action-state__text" theme="danger">
          {errorText}
        </Text>
      ) : (
        errorText
      )}
      {onRetry && (
        <>
          {" "}
          <a className="tea-action-state__text" onClick={onRetry}>
            {retryText}
          </a>
        </>
      )}
    </span>
  );
}
