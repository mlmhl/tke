import React, { useRef } from "react";
import classNames from "classnames";
import { TableProps } from "./TableProps";
import { TableHead } from "./TableHead";
import { TableBody } from "./TableBody";
import { useMiddleware } from "./util/use-middleware";
import { createRocket } from "../_util/create-rocket";
import * as addons from "./addons";
import { withStatics } from "../_util/with-statics";

export const Table = withStatics(
  function Table<T>(props: TableProps<T>) {
    const { addons = [], bordered, compact, verticalTop, hideHeader } = props;

    const headRef = useRef<HTMLDivElement>(null);
    const bodyRef = useRef<HTMLDivElement>(null);

    // 同步 body 和 header 滚动位置
    function handleScroll() {
      if (headRef.current && bodyRef.current) {
        headRef.current.scrollLeft = bodyRef.current.scrollLeft;
      }
    }

    // 执行 addon props middleware
    // eslint-disable-next-line no-param-reassign
    props = useMiddleware(addons, "onInjectProps")(props);

    const renderTable = useMiddleware(addons, "onInjectTable")(props => (
      <div
        className={classNames("tea-table", {
          "tea-table--compact": compact,
          "tea-table--bordered": bordered,
          "tea-table--verticaltop": verticalTop,
        })}
      >
        {!hideHeader && <TableHead ref={headRef} {...props} />}
        <TableBody ref={bodyRef} onScrollCapture={handleScroll} {...props} />
      </div>
    ));

    return renderTable(props);
  },
  {
    addons,
    ActionPanel: createRocket("ActionPanel", "div.tea-table__action-panel"),
  }
);
