import React from "react";
import { TableAddon, TableProps } from "../TableProps";
import { Icon } from "../../icon";

/**
 * `removeable` 插件用于支持表格可删除行的样式及操作。
  ```jsx
  import { removeable } from '@tea/component/table/addons/removeable';
  function Example() {
    return <Table addons={[removeable(options)]} />;
  }
  ```
 */
export interface RemoveableOptions<Record = any> {
  /**
   * 删除操作回调
   */
  onRemove?: (
    rowKey: string,
    context: { event: React.SyntheticEvent; record: Record }
  ) => void;

  /**
   * 列宽度，可以指定 CSS 属性或数字 (单位：px)
   * @default 46
   */
  width?: string | number;
}

const fallbackColumnKey = "__removeable_addon__";

let rowDisabled: TableProps["rowDisabled"] = null;

export function removeable({
  onRemove = () => null,
  width = 46,
}: RemoveableOptions): TableAddon {
  return {
    onInjectProps: props => {
      rowDisabled = props.rowDisabled || (() => false);

      const columns = [
        ...props.columns,
        {
          key: fallbackColumnKey,
          header: "",
          width,
          render: () => null,
        },
      ];
      return { ...props, columns };
    },
    onInjectColumn: previous => (record, rowKey, recordIndex, column) => {
      // 不是目标列
      if (column.key !== fallbackColumnKey) {
        return previous(record, rowKey, recordIndex, column);
      }

      const { children: preChildren, props, ...result } = previous(
        record,
        rowKey,
        recordIndex,
        column
      );

      let children = preChildren;

      // 非表头
      if (recordIndex !== -1 && !rowDisabled(record)) {
        children = (
          <div>
            <button
              type="button"
              className="tea-btn tea-btn--icon"
              onClick={event => onRemove(rowKey, { event, record })}
            >
              <Icon type="dismiss" />
            </button>
          </div>
        );
      }
      return { ...result, props, children };
    },
  };
}
