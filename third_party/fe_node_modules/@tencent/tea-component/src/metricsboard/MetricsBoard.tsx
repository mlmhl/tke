import React from "react";
import classNames from "classnames";
import { createRocket } from "../_util/create-rocket";

export interface MetricsBoardProps {
  /**
   * 标题
   */
  title: React.ReactNode;

  /**
   * 统计数值
   */
  value: React.ReactNode;

  /**
   * 统计数值单位
   */
  unit?: React.ReactNode;

  /**
   * 统计信息
   */
  infos?: React.ReactNode[];

  /**
   * 点击回调
   *
   * **当传递该回调函数后，组件会变为可点击的样式**
   */
  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;
}

export function MetricsBoard({
  title,
  value,
  unit,
  infos = [],
  onClick,
}: MetricsBoardProps) {
  const hasOnClick = typeof onClick === "function";
  return (
    <div
      className={classNames("tea-metrics-board", {
        "tea-metrics-board--link": hasOnClick,
      })}
      onClick={hasOnClick ? onClick : () => null}
    >
      <div className="tea-metrics-board__header">
        <div className="tea-metrics-board__header-title">{title}</div>
      </div>
      <div className="tea-metrics-board__body">
        <div className="tea-metrics-board__value">
          <span className="tea-metrics-board__number">{value}</span>
          <span className="tea-metrics-board__unit"> {unit}</span>
        </div>
        <div className="tea-metrics-board__info">
          {infos.map((info, index) => (
            <div className="tea-metrics-board__info-item" key={index}>
              {info}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

MetricsBoard.InfoLabel = createRocket(
  "MetricsBoardInfoLabel",
  "label.tea-metrics-board__info-label"
);
MetricsBoard.InfoKey = createRocket(
  "MetricsBoardInfoKey",
  "label.tea-metrics-board__info-key"
);
