"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var dropdown_1 = require("../dropdown");
var list_1 = require("../list");
var i18n_1 = require("../i18n");
var form_1 = require("../form");
var SelectMultiple_1 = require("./SelectMultiple");
var searchbox_1 = require("../searchbox");
var tips_1 = require("../tips");
var noop = function () { return null; };
function groupBy(options) {
    var groups = [];
    options.forEach(function (opt, index) {
        var groupKey = opt.groupKey;
        if (index === 0 || groupKey !== options[index - 1].groupKey) {
            groups.push([]);
        }
        groups[groups.length - 1].push(opt);
    });
    return groups;
}
function Select(props) {
    var _a;
    var t = i18n_1.useTranslation();
    var _b = form_1.useDefaultValue(props, null), value = _b.value, onChange = _b.onChange, _c = _b.options, _options = _c === void 0 ? [] : _c, _d = _b.groups, groups = _d === void 0 ? {} : _d, _e = _b.placeholder, placeholder = _e === void 0 ? t.pleaseSelect : _e, disabled = _b.disabled, button = _b.button, size = _b.size, type = _b.type, onScrollBottom = _b.onScrollBottom, className = _b.className, style = _b.style, boxSizeSync = _b.boxSizeSync, _f = _b.boxStyle, boxStyle = _f === void 0 ? {} : _f, _g = _b.onOpen, onOpen = _g === void 0 ? noop : _g, searchable = _b.searchable, _h = _b.searchPlaceholder, searchPlaceholder = _h === void 0 ? "" : _h, _j = _b.onSearch, onSearch = _j === void 0 ? noop : _j, _k = _b.filter, filter = _k === void 0 ? function (inputValue, _a) {
        var text = _a.text, value = _a.value;
        var optionText = String(typeof text === "string" ? text : value);
        return !searchable || optionText.includes(inputValue);
    } : _k, dropdownProps = tslib_1.__rest(_b, ["value", "onChange", "options", "groups", "placeholder", "disabled", "button", "size", "type", "onScrollBottom", "className", "style", "boxSizeSync", "boxStyle", "onOpen", "searchable", "searchPlaceholder", "onSearch", "filter"]);
    var dropdownRef = react_1.useRef(null);
    var _l = tslib_1.__read(react_1.useState(null), 2), dropdownWidth = _l[0], setDropdownWidth = _l[1];
    react_1.useEffect(function () {
        if (dropdownRef.current) {
            setDropdownWidth(dropdownRef.current.clientWidth);
        }
    }, [size, value]);
    var InputRef = react_1.useRef(null);
    var _m = tslib_1.__read(react_1.useState(""), 2), inputValue = _m[0], setInputValue = _m[1];
    function focus() {
        if (searchable) {
            setInputValue("");
            onSearch("");
            setTimeout(function () {
                if (InputRef.current) {
                    InputRef.current.focus();
                }
            }, 100); // 第一次展开时 Input 还未渲染
        }
    }
    var selected = value != null && _options.find(function (x) { return x.value === value; });
    // 筛选
    var options = _options.filter(function (options) { return filter(inputValue, options); });
    var hasGroup = !!options.find(function (opt) { return !!opt.groupKey; });
    var buttonText = placeholder || t.pleaseSelect;
    if (selected) {
        buttonText =
            typeof selected.text === "undefined" ? selected.value : selected.text;
    }
    // 模拟选择下拉组件
    if (type === "simulate") {
        // 同步宽度
        if (boxSizeSync && dropdownWidth) {
            Object.assign(boxStyle, {
                minWidth: dropdownWidth,
                maxWidth: dropdownWidth,
            });
        }
        var tips_2 = props.tips;
        if (!tips_2 && options.length === 0) {
            tips_2 = react_1.default.createElement(tips_1.EmptyTip, null);
        }
        tips_2 = tips_2 ? react_1.default.createElement(list_1.List.StatusTip, null, tips_2) : null;
        return (react_1.default.createElement(dropdown_1.Dropdown, tslib_1.__assign({ updateOnChildrenChange: true, ref: dropdownRef, clickClose: false, style: style, className: className, boxStyle: boxStyle, size: size, disabled: disabled, button: typeof button !== "undefined" ? button : buttonText, onOpen: function () {
                onOpen();
                focus();
            } }, dropdownProps), function (close) { return (react_1.default.createElement(react_1.default.Fragment, null,
            searchable && (react_1.default.createElement(searchbox_1.SearchBox, { simple: true, ref: InputRef, value: inputValue, onChange: function (value) {
                    setInputValue(value);
                    onSearch(value);
                }, onClear: focus, placeholder: searchPlaceholder })),
            react_1.default.createElement(list_1.List, { type: hasGroup ? "option-group" : "option", onScrollBottom: onScrollBottom },
                tips_2,
                options.map(function (opt, index) {
                    var item = (react_1.default.createElement(list_1.List.Item, { key: opt.value, disabled: opt.disabled, selected: opt === selected, onClick: function (event) {
                            onChange(opt.value, { event: event });
                            close();
                        }, tooltip: opt.tooltip }, typeof opt.text === "undefined" ? opt.value : opt.text));
                    if (opt.groupKey &&
                        (index === 0 || opt.groupKey !== options[index - 1].groupKey)) {
                        return (react_1.default.createElement(react_1.Fragment, { key: opt.value },
                            react_1.default.createElement(list_1.List.GroupLabel, null, groups[opt.groupKey]),
                            item));
                    }
                    return item;
                })))); }));
    }
    // 原生下拉组件
    return (react_1.default.createElement("select", { className: classnames_1.default("tea-select", className, (_a = {},
            _a["size-" + (size === "full" || size === "auto" ? size + "-width" : size)] = size,
            _a)), style: style, disabled: disabled, value: value || "", placeholder: placeholder, onChange: disabled ? null : function (event) { return onChange(event.target.value, { event: event }); } },
        typeof placeholder === "string" && (react_1.default.createElement("option", { disabled: !!value, hidden: true }, placeholder)),
        options.find(function (opt) { return !!opt.groupKey; })
            ? groupBy(options).map(function (group) {
                var _a = group[0], value = _a.value, groupKey = _a.groupKey;
                if (!groupKey) {
                    return group.map(function (opt) { return (react_1.default.createElement("option", { key: opt.value, value: opt.value, disabled: opt.disabled, title: typeof opt.tooltip === "string" ? opt.tooltip : undefined }, typeof opt.text === "undefined" ? opt.value : opt.text)); });
                }
                return (react_1.default.createElement("optgroup", { key: value, label: groups[groupKey] || "" }, group.map(function (opt) { return (react_1.default.createElement("option", { key: opt.value, value: opt.value, disabled: opt.disabled, title: typeof opt.tooltip === "string" ? opt.tooltip : undefined }, typeof opt.text === "undefined" ? opt.value : opt.text)); })));
            })
            : options.map(function (opt) { return (react_1.default.createElement("option", { key: opt.value, value: opt.value, disabled: opt.disabled, title: typeof opt.tooltip === "string" ? opt.tooltip : undefined }, typeof opt.text === "undefined" ? opt.value : opt.text)); })));
}
exports.Select = Select;
Select.Multiple = SelectMultiple_1.SelectMultiple;
Select.defaultLabelAlign = "middle";
//# sourceMappingURL=Select.js.map