"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/* eslint-disable */
var react_1 = tslib_1.__importDefault(require("react"));
var list_1 = require("../list");
var dropdown_1 = require("../dropdown");
var TagSearchBoxContext_1 = require("./TagSearchBoxContext");
var keys = {
    "8": "backspace",
    "9": "tab",
    "13": "enter",
    "37": "left",
    "38": "up",
    "39": "right",
    "40": "down",
};
var AttributeSelect = /** @class */ (function (_super) {
    tslib_1.__extends(AttributeSelect, _super);
    function AttributeSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            select: -1,
        };
        // 父组件调用
        _this.handleKeyDown = function (keyCode) {
            if (!keys[keyCode])
                return;
            var onSelect = _this.props.onSelect;
            var select = _this.state.select;
            switch (keys[keyCode]) {
                case "enter":
                case "tab":
                    if (select < 0)
                        break;
                    if (onSelect) {
                        onSelect(_this.getAttribute(select));
                    }
                    return false;
                case "up":
                    _this.move(-1);
                    break;
                case "down":
                    _this.move(1);
                    break;
            }
        };
        _this.move = function (step) {
            var select = _this.state.select;
            var list = _this.getUseableList();
            if (list.length <= 0)
                return;
            _this.setState({ select: (select + step + list.length) % list.length });
        };
        _this.handleClick = function (e, index) {
            e.stopPropagation();
            e.nativeEvent.stopPropagation();
            if (_this.props.onSelect) {
                _this.props.onSelect(_this.getAttribute(index));
            }
        };
        return _this;
    }
    AttributeSelect.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.inputValue !== nextProps.inputValue) {
            this.setState({ select: -1 });
        }
    };
    AttributeSelect.prototype.getUseableList = function () {
        var _a = this.props, attributes = _a.attributes, inputValue = _a.inputValue;
        // 获取冒号前字符串模糊查询
        var fuzzyValue = /(.*?)(:|：).*/.test(inputValue)
            ? RegExp.$1
            : inputValue;
        return attributes.filter(function (item) { return item.name.includes(inputValue) || item.name.includes(fuzzyValue); });
    };
    AttributeSelect.prototype.getAttribute = function (select) {
        var list = this.getUseableList();
        if (select < list.length) {
            return list[select];
        }
    };
    AttributeSelect.prototype.render = function () {
        var _this = this;
        var attributesSelectTips = this.context.attributesSelectTips;
        var select = this.state.select;
        var maxHeight = this.props.maxHeight;
        var list = this.getUseableList().map(function (item, index) {
            return (react_1.default.createElement(list_1.List.Item, { key: index, selected: select === index, onClick: function (e) { return _this.handleClick(e, index); } }, item.name));
        });
        if (list.length === 0)
            return null;
        return (react_1.default.createElement(dropdown_1.DropdownBox, { onClick: function (e) { return e.stopPropagation(); } },
            react_1.default.createElement(list_1.List, { type: "option", style: { maxHeight: maxHeight } },
                attributesSelectTips && (react_1.default.createElement(list_1.List.Item, { disabled: true }, attributesSelectTips)),
                list)));
    };
    AttributeSelect.contextType = TagSearchBoxContext_1.TagSearchBoxContext;
    return AttributeSelect;
}(react_1.default.Component));
exports.AttributeSelect = AttributeSelect;
//# sourceMappingURL=AttributeSelect.js.map