"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var Pagination_1 = require("../pagination/Pagination");
function Jumper(_a) {
    var direction = _a.direction, noBordered = _a.noBordered, _b = _a.showCurrent, showCurrent = _b === void 0 ? false : _b, isCurrent = _a.isCurrent, onNext = _a.onNext, onPrev = _a.onPrev, onCurrent = _a.onCurrent, _c = _a.nextDisabled, nextDisabled = _c === void 0 ? false : _c, _d = _a.prevDisabled, prevDisabled = _d === void 0 ? false : _d, _e = _a.curDisabled, curDisabled = _e === void 0 ? false : _e, nextTitle = _a.nextTitle, prevTitle = _a.prevTitle, curTitle = _a.curTitle, className = _a.className, style = _a.style;
    return (react_1.default.createElement("div", { className: classnames_1.default("tea-pagination", { "tea-pagination--bordernone": noBordered }, className), style: style },
        react_1.default.createElement(Pagination_1.PaginationButton, { type: "pre", icon: direction === "updown" ? "arrowup" : "arrowleft", disabled: prevDisabled, title: prevTitle, onClick: onPrev }),
        showCurrent && (react_1.default.createElement(Pagination_1.PaginationButton, { type: "cur", icon: isCurrent ? "cur-active" : "cur", disabled: curDisabled, title: curTitle, onClick: onCurrent })),
        react_1.default.createElement(Pagination_1.PaginationButton, { type: "next", icon: direction === "updown" ? "arrowdown" : "arrowright", disabled: nextDisabled, title: nextTitle, onClick: onNext })));
}
exports.Jumper = Jumper;
//# sourceMappingURL=Jumper.js.map