"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var react_dom_1 = require("react-dom");
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var button_1 = require("../button");
var transition_1 = require("../transition");
var create_rocket_1 = require("../_util/create-rocket");
var get_overlay_root_1 = require("../_util/get-overlay-root");
var use_visible_transition_1 = require("../_util/use-visible-transition");
var call_both_1 = require("../_util/call-both");
var ModalMessage_1 = require("./ModalMessage");
var use_outside_click_1 = require("../_util/use-outside-click");
// 容器们
var ModalBackDrop = create_rocket_1.createRocket("ModalBackDrop", "div.tea-backdrop");
var ModalHeader = create_rocket_1.createRocket("ModalHeader", "div.tea-dialog__header");
var ModalBody = create_rocket_1.createRocket("ModalBody", "div.tea-dialog__body");
var ModalFooter = create_rocket_1.createRocket("ModalFooter", "div.tea-dialog__footer", "div.tea-dialog__btnwrap");
/**
 * 模态对话框组件
 */
function Modal(_a) {
    var visible = _a.visible, caption = _a.caption, size = _a.size, onClose = _a.onClose, onExited = _a.onExited, disableEscape = _a.disableEscape, disableCloseIcon = _a.disableCloseIcon, maskClosable = _a.maskClosable, className = _a.className, style = _a.style, children = _a.children;
    var ref = react_1.useRef(null);
    var listen = use_outside_click_1.useOutsideClick(ref).listen;
    var portalInterceptProps = listen(function () { return maskClosable && onClose(); }).portalInterceptProps;
    // 监听 ESC 键
    react_1.useEffect(function () {
        if (!visible) {
            return function () { return null; };
        }
        var handleKeydown = function (evt) {
            if (evt.keyCode === 27 && !disableEscape && onClose) {
                onClose();
            }
        };
        window.addEventListener("keydown", handleKeydown);
        return function () { return window.removeEventListener("keydown", handleKeydown); };
    }, [visible, disableEscape]); // eslint-disable-line react-hooks/exhaustive-deps
    var _b = use_visible_transition_1.useVisibleTransition(visible), shouldContentEnter = _b.shouldContentEnter, shouldContentRender = _b.shouldContentRender, onContentExit = _b.onContentExit;
    if (!shouldContentRender) {
        return null;
    }
    // 有标题，或者有图标，就需要渲染 header
    var hasHeader = Boolean(caption) || !disableCloseIcon;
    // 内置尺寸名称
    var sizeClassName = null;
    if (typeof size === "string" && ["s", "l", "xl", "auto"].indexOf(size) > -1) {
        sizeClassName = "size-" + size;
    }
    var dialog = (react_1.default.createElement("div", { className: "tea-overlay tea-dialog-parent" },
        react_1.default.createElement(transition_1.FadeTransition, { in: shouldContentEnter, opacity: 0.5 },
            react_1.default.createElement(ModalBackDrop, null)),
        react_1.default.createElement(transition_1.SlideTransition, { in: shouldContentEnter, onExited: call_both_1.callBoth(onExited, onContentExit) },
            react_1.default.createElement("div", { className: classnames_1.default("tea-dialog", className), style: style },
                react_1.default.createElement("div", tslib_1.__assign({ ref: ref, className: classnames_1.default("tea-dialog__inner", sizeClassName), style: size > 0 || /%$/.test(String(size)) ? { width: size } : null }, portalInterceptProps),
                    hasHeader && (react_1.default.createElement(ModalHeader, null,
                        caption && (react_1.default.createElement("h3", { className: "tea-dialog__headertitle" }, caption)),
                        !disableCloseIcon && react_1.default.createElement(button_1.Button, { icon: "close", onClick: onClose }))),
                    children)))));
    return react_dom_1.createPortal(dialog, get_overlay_root_1.getOverlayRoot());
}
exports.Modal = Modal;
/**
 * 渲染对话框的主要内容
 */
Modal.Body = ModalBody;
/**
 * 渲染对话框的底部内容
 */
Modal.Footer = ModalFooter;
/**
 * 对话框消息内容，可置于 Modal.Body 中
 */
Modal.Message = ModalMessage_1.ModalMessage;
//# sourceMappingURL=ModalMain.js.map