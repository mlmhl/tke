"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var controlled_1 = require("../form/controlled");
var dropdown_1 = require("../dropdown");
var RegionOption_1 = require("./RegionOption");
var get_props_from_children_by_type_1 = require("../_util/get-props-from-children-by-type");
function RegionSelect(props) {
    // eslint-disable-next-line react/destructuring-assignment
    var options = get_props_from_children_by_type_1.getPropsFromChildrenByType(props.children, RegionOption_1.RegionOption);
    var _a = controlled_1.useDefaultValue(props, options[0].value), value = _a.value, onChange = _a.onChange, moreInfo = _a.moreInfo, children = _a.children, dropdownProps = tslib_1.__rest(_a, ["value", "onChange", "moreInfo", "children"]);
    var selectedOption = options.find(function (x) { return x && x.value === value; }) || options[0];
    return (react_1.default.createElement(dropdown_1.Dropdown, tslib_1.__assign({}, dropdownProps, { appearence: "button", className: classnames_1.default("tea-dropdown--region-select", dropdownProps.className), button: react_1.default.createElement(react_1.default.Fragment, null,
            selectedOption && react_1.default.createElement(RegionOption_1.RegionOption, tslib_1.__assign({}, selectedOption)),
            moreInfo && react_1.default.createElement("div", { className: "tea-region__more" }, moreInfo)) }), react_1.default.createElement(RegionOption_1.RegionOptionContext.Provider, { value: {
            inject: function (props) {
                return tslib_1.__assign({}, props, { selected: value === props.value, onClick: function (event) {
                        if (typeof props.onClick === "function") {
                            props.onClick(event);
                        }
                        if (event.isDefaultPrevented()) {
                            return;
                        }
                        onChange(props.value, { event: event });
                    } });
            },
        } }, children)));
}
exports.RegionSelect = RegionSelect;
RegionSelect.defaultLabelAlign = "middle";
//# sourceMappingURL=RegionSelect.js.map