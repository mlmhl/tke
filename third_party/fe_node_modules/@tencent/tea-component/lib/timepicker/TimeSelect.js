"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var SCROLL_OFFSET = 80;
var SCROLL_DURATION = 120;
/**
 * 滚动到指定元素
 */
function scrollTo(element, to, duration) {
    if (duration <= 0) {
        element.scrollTop = to;
        return;
    }
    var difference = to - element.scrollTop;
    var perTick = (difference / duration) * 10;
    requestAnimationFrame(function () {
        element.scrollTop += perTick;
        if (element.scrollTop === to)
            return;
        scrollTo(element, to, duration - 10);
    });
}
function TimeSelect(_a) {
    var value = _a.value, _b = _a.from, from = _b === void 0 ? 0 : _b, to = _a.to, _c = _a.step, step = _c === void 0 ? 1 : _c, _d = _a.disabledValues, disabledValues = _d === void 0 ? [] : _d, _e = _a.onChange, onChange = _e === void 0 ? function () { return null; } : _e;
    var selectRef = react_1.useRef(null);
    react_1.useEffect(function () {
        scrollToSelected(0);
    }, []); // eslint-disable-line react-hooks/exhaustive-deps
    react_1.useEffect(function () {
        scrollToSelected(SCROLL_DURATION);
    }, [value, from, to, step]); // eslint-disable-line react-hooks/exhaustive-deps
    /**
     * 滚动到当前选择元素
     */
    function scrollToSelected(duration) {
        var element = selectRef.current;
        var index = Math.floor(value / step);
        var topOption = element.children[index];
        var to = topOption.offsetTop - element.offsetTop - SCROLL_OFFSET;
        scrollTo(element, to, duration);
    }
    /**
     * 根据范围生成列表
     */
    function genRangeList() {
        return Array(Math.floor((to - from + 1) / step))
            .fill(0)
            .map(function (_, i) { return i * step + from; });
    }
    function handleSelect(event, value) {
        event.stopPropagation();
        onChange(value, { event: event });
    }
    return (react_1.default.createElement("ul", { ref: selectRef, className: "tea-list tea-list--option tea-list--calendar-time" }, genRangeList().map(function (item) {
        var disabled = disabledValues.includes(item);
        return (react_1.default.createElement("li", { key: item, className: classnames_1.default({
                "is-disabled": disabled,
                "is-selected": !disabled && item === value,
            }), onClick: function (e) { return !disabled && handleSelect(e, item); } },
            react_1.default.createElement("div", { className: "tea-list__item" }, item > 9 ? "" + item : "0" + item)));
    })));
}
exports.TimeSelect = TimeSelect;
//# sourceMappingURL=TimeSelect.js.map