import EventEmitter from "eventemitter3";
import { Selection } from "d3";
import { Theme, Legend, Axis, Tooltip } from "../type";
import { Combine } from "../../_type";
export interface Scale {
    [key: string]: {
        alias?: string;
        domain?: [number, number];
    };
}
export interface DataRow {
    [key: string]: string | number;
}
export declare class Context extends EventEmitter {
    /**
     * 主题
     */
    theme: Theme;
    /**
     * 数据表
     */
    dataSource: {
        [key: string]: string | number;
    }[];
    /**
     * 容器
     */
    root: HTMLElement;
    /**
     * 视图区
     */
    view: Selection<SVGElement, {}, HTMLElement, {}>;
    /**
     * 绘图区
     */
    plot: {
        selection?: Selection<SVGGElement, {}, HTMLElement, {}>;
        height?: number;
        width?: number;
        padding?: Theme["padding"];
    };
    /**
     * 图例区
     */
    legend: Combine<Legend, {
        selection?: Selection<SVGGElement, {}, HTMLElement, {}>;
    }>;
    /**
     * 自定义轴操作
     */
    axis: {
        xAxes?: Axis;
        yAxes?: Axis;
    };
    /**
     * 比例尺，比例尺用以限定值域范围等
     */
    scale: Scale;
    /**
     * 提示框
     */
    tooltip: Tooltip;
    constructor(root: HTMLElement, cfg?: Theme);
    setSize(): void;
    setScale(scale: Scale): void;
    setSource(dataSource: DataRow[]): void;
    setTooltip(cfg: Tooltip): void;
    setAxis(axis: this["axis"]): void;
    setLegend(cfg: Legend): void;
    getColor(key: string, index: number, isLast?: boolean): string;
}
