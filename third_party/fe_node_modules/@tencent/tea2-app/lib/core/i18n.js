"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var i18next_1 = __importDefault(require("i18next"));
var react_i18next_1 = require("react-i18next");
var hash_string_1 = __importDefault(require("hash-string"));
/**
 * 用于 <Trans> 中插值
 */
function Slot(_a) {
    var content = _a.content;
    return react_1.default.createElement(react_1.default.Fragment, null, content);
}
// 是否已经初始化
var hasInited = false;
// 当前语言
var lng = window["VERSION"] || "zh";
// 从句子计算哈希一个 key 值，该算法需要和 scanner 保持一致
var hashKey = function (value) {
    return "k_" +
        ("0000" + hash_string_1.default(value.replace(/\s+/g, "")).toString(36)).slice(-7);
};
// 约定中语言名不规范
var _lngs = {
    zh: "zh",
    en: "en",
    jp: "ja",
    ko: "ko",
};
/**
 * 国际化包括的信息以及所需的工具
 */
exports.i18n = {
    /**
     * 当前用户的国际化语言，已知语言：
     *  - `zh` 中文
     *  - `en` 英文
     *  - `jp` 日语
     *  - `ko` 韩语
     */
    lng: lng,
    /**
     * 当前用户的国际化语言，已知语言：
     *  - `zh` 中文
     *  - `en` 英文
     *  - `jp` 日语
     *  - `ko` 韩语
     */
    lang: lng,
    /**
     * 当前用户所在站点
     *  - `1` 表示国内站；
     *  - `2` 表示国际站；
     *
     * @type {1 | 2}
     */
    site: 1,
    /**
     * 注册国家
     */
    country: {
        name: "CN",
        code: "86",
    },
    /**
     * 初始化当前语言的国际化配置
     */
    init: function (_a) {
        var _b;
        var translation = _a.translation;
        if (hasInited) {
            // @ts-ignore
            if (!PRODUCTION) {
                console.warn("你已经初始化过 i18n，请勿重复初始化");
            }
            return;
        }
        hasInited = true;
        i18next_1.default.use(react_i18next_1.reactI18nextModule).init({
            // 使用语言
            lng: _lngs[lng],
            // 英文版 fallback 到中文版，其它语言 fallback 到英文版
            fallbackLng: lng === "en" ? "zh" : "en",
            // 翻译资源
            resources: (_b = {},
                _b[_lngs[lng]] = { translation: translation },
                _b),
            ns: "translation",
            defaultNS: "translation",
            interpolation: {
                escapeValue: false,
            },
            react: {
                hashTransKey: hashKey,
            },
        });
    },
    /**
     * 标记翻译句子
     * 详细的标记说明，请参考 http://tapd.oa.com/tcp_access/markdown_wikis/0#1020399462009480783
     */
    t: function (sentence, options) {
        var key = hashKey(sentence);
        return i18next_1.default.t(key, __assign({}, (options || {}), { defaultValue: sentence }));
    },
    /**
     * 标记翻译组件
     * 详细的标记说明，请参考 http://tapd.oa.com/tcp_access/markdown_wikis/0#1020399462009480783
     */
    Trans: react_i18next_1.Trans,
    /**
     * 用于 <Trans> 中插值
     */
    Slot: Slot,
};
var loginInfo = window.LOGIN_INFO;
if (typeof loginInfo === "object" && loginInfo) {
    var area = loginInfo.area, countryCode = loginInfo.countryCode, countryName = loginInfo.countryName;
    exports.i18n.site = area;
    Object.assign(exports.i18n.country, {
        name: countryName,
        code: countryCode,
    });
}
exports.getI18NInstance = function () { return (hasInited ? i18next_1.default : null); };
/**
 * @internal 国际化容器，内部使用
 */
exports.I18NProvider = react_i18next_1.I18nextProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2kxOG4udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnREFBMEI7QUFDMUIsb0RBQThCO0FBQzlCLCtDQUEyRTtBQUMzRSw0REFBcUM7QUFFckM7O0dBRUc7QUFDSCxTQUFTLElBQUksQ0FBQyxFQUFXO1FBQVQsb0JBQU87SUFDckIsT0FBTyw4REFBRyxPQUFPLENBQUksQ0FBQztBQUN4QixDQUFDO0FBRUQsVUFBVTtBQUNWLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztBQUV0QixPQUFPO0FBQ1AsSUFBTSxHQUFHLEdBQVcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQztBQUU5QyxzQ0FBc0M7QUFDdEMsSUFBTSxPQUFPLEdBQUcsVUFBQyxLQUFhO0lBQzVCLE9BQUEsSUFBSTtRQUNKLENBQUMsTUFBTSxHQUFHLHFCQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFEdkUsQ0FDdUUsQ0FBQztBQUUxRSxZQUFZO0FBQ1osSUFBTSxLQUFLLEdBQUc7SUFDWixFQUFFLEVBQUUsSUFBSTtJQUNSLEVBQUUsRUFBRSxJQUFJO0lBQ1IsRUFBRSxFQUFFLElBQUk7SUFDUixFQUFFLEVBQUUsSUFBSTtDQUNULENBQUM7QUFFRjs7R0FFRztBQUNVLFFBQUEsSUFBSSxHQUFHO0lBQ2xCOzs7Ozs7T0FNRztJQUNILEdBQUcsS0FBQTtJQUNIOzs7Ozs7T0FNRztJQUNILElBQUksRUFBRSxHQUFHO0lBRVQ7Ozs7OztPQU1HO0lBQ0gsSUFBSSxFQUFFLENBQUM7SUFFUDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRSxJQUFJO1FBQ1YsSUFBSSxFQUFFLElBQUk7S0FDWDtJQUVEOztPQUVHO0lBQ0gsSUFBSSxFQUFFLFVBQUMsRUFBZ0M7O1lBQTlCLDRCQUFXO1FBQ2xCLElBQUksU0FBUyxFQUFFO1lBQ2IsYUFBYTtZQUNiLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO2FBQ3RDO1lBQ0QsT0FBTztTQUNSO1FBQ0QsU0FBUyxHQUFHLElBQUksQ0FBQztRQUNqQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQ0FBa0IsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNuQyxPQUFPO1lBQ1AsR0FBRyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFFZix1Q0FBdUM7WUFDdkMsV0FBVyxFQUFFLEdBQUcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSTtZQUV2QyxPQUFPO1lBQ1AsU0FBUztnQkFDUCxHQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBRyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUU7bUJBQzNDO1lBRUQsRUFBRSxFQUFFLGFBQWE7WUFDakIsU0FBUyxFQUFFLGFBQWE7WUFFeEIsYUFBYSxFQUFFO2dCQUNiLFdBQVcsRUFBRSxLQUFLO2FBQ25CO1lBRUQsS0FBSyxFQUFFO2dCQUNMLFlBQVksRUFBRSxPQUFPO2FBQ2Y7U0FDVCxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsQ0FBQyxFQUFFLFVBQUMsUUFBZ0IsRUFBRSxPQUFnQztRQUNwRCxJQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUIsT0FBTyxpQkFBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLGVBQ2YsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLElBQ2xCLFlBQVksRUFBRSxRQUFRLElBQ1osQ0FBQztJQUNmLENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLLHVCQUFBO0lBRUw7O09BRUc7SUFDSCxJQUFJLE1BQUE7Q0FDTCxDQUFDO0FBRUYsSUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztBQUNwQyxJQUFJLE9BQU8sU0FBUyxLQUFLLFFBQVEsSUFBSSxTQUFTLEVBQUU7SUFDdEMsSUFBQSxxQkFBSSxFQUFFLG1DQUFXLEVBQUUsbUNBQVcsQ0FBZTtJQUVyRCxZQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNqQixNQUFNLENBQUMsTUFBTSxDQUFDLFlBQUksQ0FBQyxPQUFPLEVBQUU7UUFDMUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsSUFBSSxFQUFFLFdBQVc7S0FDbEIsQ0FBQyxDQUFDO0NBQ0o7QUFFWSxRQUFBLGVBQWUsR0FBRyxjQUFNLE9BQUEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGlCQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUE1QixDQUE0QixDQUFDO0FBRWxFOztHQUVHO0FBQ1UsUUFBQSxZQUFZLEdBQUcsK0JBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBpMThuZXh0IGZyb20gXCJpMThuZXh0XCI7XG5pbXBvcnQgeyBUcmFucywgSTE4bmV4dFByb3ZpZGVyLCByZWFjdEkxOG5leHRNb2R1bGUgfSBmcm9tIFwicmVhY3QtaTE4bmV4dFwiO1xuaW1wb3J0IGhhc2hTdHJpbmcgZnJvbSBcImhhc2gtc3RyaW5nXCI7XG5cbi8qKlxuICog55So5LqOIDxUcmFucz4g5Lit5o+S5YC8XG4gKi9cbmZ1bmN0aW9uIFNsb3QoeyBjb250ZW50IH0pIHtcbiAgcmV0dXJuIDw+e2NvbnRlbnR9PC8+O1xufVxuXG4vLyDmmK/lkKblt7Lnu4/liJ3lp4vljJZcbmxldCBoYXNJbml0ZWQgPSBmYWxzZTtcblxuLy8g5b2T5YmN6K+t6KiAXG5jb25zdCBsbmc6IHN0cmluZyA9IHdpbmRvd1tcIlZFUlNJT05cIl0gfHwgXCJ6aFwiO1xuXG4vLyDku47lj6XlrZDorqHnrpflk4jluIzkuIDkuKoga2V5IOWAvO+8jOivpeeul+azlemcgOimgeWSjCBzY2FubmVyIOS/neaMgeS4gOiHtFxuY29uc3QgaGFzaEtleSA9ICh2YWx1ZTogc3RyaW5nKSA9PlxuICBcImtfXCIgK1xuICAoXCIwMDAwXCIgKyBoYXNoU3RyaW5nKHZhbHVlLnJlcGxhY2UoL1xccysvZywgXCJcIikpLnRvU3RyaW5nKDM2KSkuc2xpY2UoLTcpO1xuXG4vLyDnuqblrprkuK3or63oqIDlkI3kuI3op4TojINcbmNvbnN0IF9sbmdzID0ge1xuICB6aDogXCJ6aFwiLFxuICBlbjogXCJlblwiLFxuICBqcDogXCJqYVwiLFxuICBrbzogXCJrb1wiLFxufTtcblxuLyoqXG4gKiDlm73pmYXljJbljIXmi6znmoTkv6Hmga/ku6Xlj4rmiYDpnIDnmoTlt6XlhbdcbiAqL1xuZXhwb3J0IGNvbnN0IGkxOG4gPSB7XG4gIC8qKlxuICAgKiDlvZPliY3nlKjmiLfnmoTlm73pmYXljJbor63oqIDvvIzlt7Lnn6Xor63oqIDvvJpcbiAgICogIC0gYHpoYCDkuK3mlodcbiAgICogIC0gYGVuYCDoi7HmlodcbiAgICogIC0gYGpwYCDml6Xor61cbiAgICogIC0gYGtvYCDpn6nor61cbiAgICovXG4gIGxuZyxcbiAgLyoqXG4gICAqIOW9k+WJjeeUqOaIt+eahOWbvemZheWMluivreiogO+8jOW3suefpeivreiogO+8mlxuICAgKiAgLSBgemhgIOS4reaWh1xuICAgKiAgLSBgZW5gIOiLseaWh1xuICAgKiAgLSBganBgIOaXpeivrVxuICAgKiAgLSBga29gIOmfqeivrVxuICAgKi9cbiAgbGFuZzogbG5nLFxuXG4gIC8qKlxuICAgKiDlvZPliY3nlKjmiLfmiYDlnKjnq5nngrlcbiAgICogIC0gYDFgIOihqOekuuWbveWGheerme+8m1xuICAgKiAgLSBgMmAg6KGo56S65Zu96ZmF56uZ77ybXG4gICAqXG4gICAqIEB0eXBlIHsxIHwgMn1cbiAgICovXG4gIHNpdGU6IDEsXG5cbiAgLyoqXG4gICAqIOazqOWGjOWbveWutlxuICAgKi9cbiAgY291bnRyeToge1xuICAgIG5hbWU6IFwiQ05cIixcbiAgICBjb2RlOiBcIjg2XCIsXG4gIH0sXG5cbiAgLyoqXG4gICAqIOWIneWni+WMluW9k+WJjeivreiogOeahOWbvemZheWMlumFjee9rlxuICAgKi9cbiAgaW5pdDogKHsgdHJhbnNsYXRpb24gfTogSTE4TkluaXRPcHRpb25zKSA9PiB7XG4gICAgaWYgKGhhc0luaXRlZCkge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgaWYgKCFQUk9EVUNUSU9OKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIuS9oOW3sue7j+WIneWni+WMlui/hyBpMThu77yM6K+35Yu/6YeN5aSN5Yid5aeL5YyWXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBoYXNJbml0ZWQgPSB0cnVlO1xuICAgIGkxOG5leHQudXNlKHJlYWN0STE4bmV4dE1vZHVsZSkuaW5pdCh7XG4gICAgICAvLyDkvb/nlKjor63oqIBcbiAgICAgIGxuZzogX2xuZ3NbbG5nXSxcblxuICAgICAgLy8g6Iux5paH54mIIGZhbGxiYWNrIOWIsOS4reaWh+eJiO+8jOWFtuWug+ivreiogCBmYWxsYmFjayDliLDoi7HmlofniYhcbiAgICAgIGZhbGxiYWNrTG5nOiBsbmcgPT09IFwiZW5cIiA/IFwiemhcIiA6IFwiZW5cIixcblxuICAgICAgLy8g57+76K+R6LWE5rqQXG4gICAgICByZXNvdXJjZXM6IHtcbiAgICAgICAgW19sbmdzW2xuZ11dOiB7IHRyYW5zbGF0aW9uOiB0cmFuc2xhdGlvbiB9LFxuICAgICAgfSxcblxuICAgICAgbnM6IFwidHJhbnNsYXRpb25cIixcbiAgICAgIGRlZmF1bHROUzogXCJ0cmFuc2xhdGlvblwiLFxuXG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIGVzY2FwZVZhbHVlOiBmYWxzZSwgLy8gbm90IG5lZWRlZCBmb3IgcmVhY3QgYXMgaXQgZXNjYXBlcyBieSBkZWZhdWx0XG4gICAgICB9LFxuXG4gICAgICByZWFjdDoge1xuICAgICAgICBoYXNoVHJhbnNLZXk6IGhhc2hLZXksXG4gICAgICB9IGFzIGFueSxcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICog5qCH6K6w57+76K+R5Y+l5a2QXG4gICAqIOivpue7hueahOagh+iusOivtOaYju+8jOivt+WPguiAgyBodHRwOi8vdGFwZC5vYS5jb20vdGNwX2FjY2Vzcy9tYXJrZG93bl93aWtpcy8wIzEwMjAzOTk0NjIwMDk0ODA3ODNcbiAgICovXG4gIHQ6IChzZW50ZW5jZTogc3RyaW5nLCBvcHRpb25zPzogSTE4TlRyYW5zbGF0aW9uT3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IGtleSA9IGhhc2hLZXkoc2VudGVuY2UpO1xuICAgIHJldHVybiBpMThuZXh0LnQoa2V5LCB7XG4gICAgICAuLi4ob3B0aW9ucyB8fCB7fSksXG4gICAgICBkZWZhdWx0VmFsdWU6IHNlbnRlbmNlLFxuICAgIH0pIGFzIHN0cmluZztcbiAgfSxcblxuICAvKipcbiAgICog5qCH6K6w57+76K+R57uE5Lu2XG4gICAqIOivpue7hueahOagh+iusOivtOaYju+8jOivt+WPguiAgyBodHRwOi8vdGFwZC5vYS5jb20vdGNwX2FjY2Vzcy9tYXJrZG93bl93aWtpcy8wIzEwMjAzOTk0NjIwMDk0ODA3ODNcbiAgICovXG4gIFRyYW5zLFxuXG4gIC8qKlxuICAgKiDnlKjkuo4gPFRyYW5zPiDkuK3mj5LlgLxcbiAgICovXG4gIFNsb3QsXG59O1xuXG5jb25zdCBsb2dpbkluZm8gPSB3aW5kb3cuTE9HSU5fSU5GTztcbmlmICh0eXBlb2YgbG9naW5JbmZvID09PSBcIm9iamVjdFwiICYmIGxvZ2luSW5mbykge1xuICBjb25zdCB7IGFyZWEsIGNvdW50cnlDb2RlLCBjb3VudHJ5TmFtZSB9ID0gbG9naW5JbmZvO1xuXG4gIGkxOG4uc2l0ZSA9IGFyZWE7XG4gIE9iamVjdC5hc3NpZ24oaTE4bi5jb3VudHJ5LCB7XG4gICAgbmFtZTogY291bnRyeU5hbWUsXG4gICAgY29kZTogY291bnRyeUNvZGUsXG4gIH0pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0STE4Tkluc3RhbmNlID0gKCkgPT4gKGhhc0luaXRlZCA/IGkxOG5leHQgOiBudWxsKTtcblxuLyoqXG4gKiBAaW50ZXJuYWwg5Zu96ZmF5YyW5a655Zmo77yM5YaF6YOo5L2/55SoXG4gKi9cbmV4cG9ydCBjb25zdCBJMThOUHJvdmlkZXIgPSBJMThuZXh0UHJvdmlkZXI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSTE4TkluaXRPcHRpb25zIHtcbiAgdHJhbnNsYXRpb246IEkxOE5UcmFuc2xhdGlvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJMThOVHJhbnNsYXRpb24ge1xuICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSTE4TlRyYW5zbGF0aW9uT3B0aW9ucyB7XG4gIC8qKiDnlKjkuo7noa7lrprljZXlpI3mlbDnmoTmlbDph4/lgLwgKi9cbiAgY291bnQ/OiBudW1iZXI7XG5cbiAgLyoqIOeUqOS6juehruWumuS4iuS4i+aWh+eahOivtOaYjuaWh+acrO+8jOWPquiDveS9v+eUqOWtl+espuS4suW4uOmHj++8jOWQpuWImeaXoOazleaJq+aPjyAqL1xuICBjb250ZXh0Pzogc3RyaW5nO1xuXG4gIC8vIOWFgeiuuOS8oOWFpeaPkuWAvFxuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG4iXX0=