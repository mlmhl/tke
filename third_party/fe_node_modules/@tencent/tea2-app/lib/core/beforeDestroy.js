"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var history_context_1 = require("./history/history-context");
exports.BeforeDestroyContext = react_1.default.createContext(null);
exports.BeforeDestroyContext.displayName = "Tea.BeforeDestroy";
/**
 * @param listener 页面即将销毁或者跳转时调用
 * @param deps
 *
 * @example
 * ```js
function Component() {
  useBeforeDestroy(({ type, url }) => {
    return "确认离开当前页面？";
    // return 字符串时将弹出确认框：是（跳转）/否（阻止跳转）
    // return false 时将阻止跳转逻辑
  }, []);
  return <div>Component</div>
}
```
 */
exports.useBeforeDestroy = function (listener, deps) {
    if (deps === void 0) { deps = []; }
    var history = history_context_1.useHistory();
    var setBeforeDestroyListener = react_1.useContext(exports.BeforeDestroyContext).setBeforeDestroyListener;
    react_1.useEffect(function () {
        var passPromptHook = false;
        var confirm = function (params) {
            var result = listener(params);
            if (typeof result === "string") {
                return window.confirm(result);
            }
            return result !== false;
        };
        // history.block
        var promptHook = function (location) {
            var result = confirm({
                type: "navigate",
                url: location.pathname,
            });
            if (result) {
                passPromptHook = true;
            }
            return result;
        };
        var unblock = history.block(promptHook);
        // 控制台路由
        var beforeDestroyListener = function (params) {
            // 路由跳转时可能先经过 promptHook，此时如果到达 beforeDestroy，一定是不阻止跳转
            if (passPromptHook) {
                passPromptHook = false;
                return;
            }
            return confirm(params);
        };
        setBeforeDestroyListener(beforeDestroyListener);
        return function () {
            unblock();
            setBeforeDestroyListener(null);
        };
    }, __spread([listener], deps));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmb3JlRGVzdHJveS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2JlZm9yZURlc3Ryb3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBNkU7QUFFN0UsNkRBQXVEO0FBNEIxQyxRQUFBLG9CQUFvQixHQUFHLGVBQUssQ0FBQyxhQUFhLENBRXJELElBQUksQ0FBQyxDQUFDO0FBRVIsNEJBQW9CLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDO0FBRXZEOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNVLFFBQUEsZ0JBQWdCLEdBQUcsVUFDOUIsUUFBK0IsRUFDL0IsSUFBeUI7SUFBekIscUJBQUEsRUFBQSxTQUF5QjtJQUV6QixJQUFNLE9BQU8sR0FBRyw0QkFBVSxFQUFFLENBQUM7SUFDckIsSUFBQSxvR0FBd0IsQ0FBc0M7SUFFdEUsaUJBQVMsQ0FBQztRQUNSLElBQUksY0FBYyxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFNLE9BQU8sR0FBMEIsVUFBQSxNQUFNO1lBQzNDLElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoQyxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtnQkFDOUIsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBUSxDQUFDO2FBQ3RDO1lBQ0QsT0FBTyxNQUFNLEtBQUssS0FBSyxDQUFDO1FBQzFCLENBQUMsQ0FBQztRQUVGLGdCQUFnQjtRQUNoQixJQUFNLFVBQVUsR0FBRyxVQUFBLFFBQVE7WUFDekIsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDO2dCQUNyQixJQUFJLEVBQUUsVUFBVTtnQkFDaEIsR0FBRyxFQUFFLFFBQVEsQ0FBQyxRQUFRO2FBQ3ZCLENBQUMsQ0FBQztZQUNILElBQUksTUFBTSxFQUFFO2dCQUNWLGNBQWMsR0FBRyxJQUFJLENBQUM7YUFDdkI7WUFDRCxPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUM7UUFDRixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQWlCLENBQUMsQ0FBQztRQUVqRCxRQUFRO1FBQ1IsSUFBTSxxQkFBcUIsR0FBRyxVQUFBLE1BQU07WUFDbEMsc0RBQXNEO1lBQ3RELElBQUksY0FBYyxFQUFFO2dCQUNsQixjQUFjLEdBQUcsS0FBSyxDQUFDO2dCQUN2QixPQUFPO2FBQ1I7WUFDRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUM7UUFDRix3QkFBd0IsQ0FBQyxxQkFBNEIsQ0FBQyxDQUFDO1FBRXZELE9BQU87WUFDTCxPQUFPLEVBQUUsQ0FBQztZQUNWLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQztJQUNKLENBQUMsWUFBRyxRQUFRLEdBQUssSUFBSSxFQUFFLENBQUM7QUFDMUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgRGVwZW5kZW5jeUxpc3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgVHJhbnNpdGlvblByb21wdEhvb2sgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IHsgdXNlSGlzdG9yeSB9IGZyb20gXCIuL2hpc3RvcnkvaGlzdG9yeS1jb250ZXh0XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmVmb3JlRGVzdHJveVBhcmFtcyB7XG4gIC8qKlxuICAgKiDlr7zoh7TmqKHlnZfopoHplIDmr4HnmoTljp/lm6BcbiAgICpcbiAgICogLSBgbmF2aWdhdGVgIOihqOekuueUqOaIt+imgeWvvOiIquWIsOWFtuS7lui3r+eUseS4i++8jOaJgOS7pemUgOavgeW9k+WJjeaooeWdl1xuICAgKiAtIGB1bmxvYWRgIOihqOekuua1j+iniOWZqOmAiemhueWNoeiiq+WIt+aWsC/lhbPpl63vvIzmiYDku6XplIDmr4HlvZPliY3mqKHlnZdcbiAgICovXG4gIHR5cGU6IFwibmF2aWdhdGVcIiB8IFwidW5sb2FkXCI7XG5cbiAgLyoqXG4gICAqIOeUqOaIt+WNs+WwhuWIsOi+vueahOmhtemdoui3r+eUse+8jOWPquacieWcqCBgdHlwZWAg5Li6IGBuYXZpZ2F0ZWAg55qE5pe25YCZ5Lya5pyJ6L+Z5Liq5Y+C5pWwXG4gICAqL1xuICB1cmw/OiBzdHJpbmc7XG59XG5cbi8qKlxuICog6L+U5ZueIGZhbHNlIOWwhuWPlua2iOaooeWdl+mUgOavgVxuICovXG5leHBvcnQgdHlwZSBCZWZvcmVEZXN0cm95TGlzdGVuZXIgPSAoXG4gIHBhcmFtczogQmVmb3JlRGVzdHJveVBhcmFtc1xuKSA9PiBzdHJpbmcgfCBmYWxzZSB8IHZvaWQ7XG5cbnR5cGUgQmVmb3JlRGVzdHJveUNvbnRleHRQcm9wcyA9IHtcbiAgc2V0QmVmb3JlRGVzdHJveUxpc3RlbmVyPzogKGxpc3RlbmVyOiBCZWZvcmVEZXN0cm95TGlzdGVuZXIpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgQmVmb3JlRGVzdHJveUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0PFxuICBCZWZvcmVEZXN0cm95Q29udGV4dFByb3BzXG4+KG51bGwpO1xuXG5CZWZvcmVEZXN0cm95Q29udGV4dC5kaXNwbGF5TmFtZSA9IFwiVGVhLkJlZm9yZURlc3Ryb3lcIjtcblxuLyoqXG4gKiBAcGFyYW0gbGlzdGVuZXIg6aG16Z2i5Y2z5bCG6ZSA5q+B5oiW6ICF6Lez6L2s5pe26LCD55SoXG4gKiBAcGFyYW0gZGVwc1xuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqc1xuZnVuY3Rpb24gQ29tcG9uZW50KCkge1xuICB1c2VCZWZvcmVEZXN0cm95KCh7IHR5cGUsIHVybCB9KSA9PiB7XG4gICAgcmV0dXJuIFwi56Gu6K6k56a75byA5b2T5YmN6aG16Z2i77yfXCI7XG4gICAgLy8gcmV0dXJuIOWtl+espuS4suaXtuWwhuW8ueWHuuehruiupOahhu+8muaYr++8iOi3s+i9rO+8iS/lkKbvvIjpmLvmraLot7PovazvvIlcbiAgICAvLyByZXR1cm4gZmFsc2Ug5pe25bCG6Zi75q2i6Lez6L2s6YC76L6RXG4gIH0sIFtdKTtcbiAgcmV0dXJuIDxkaXY+Q29tcG9uZW50PC9kaXY+XG59XG5gYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHVzZUJlZm9yZURlc3Ryb3kgPSAoXG4gIGxpc3RlbmVyOiBCZWZvcmVEZXN0cm95TGlzdGVuZXIsXG4gIGRlcHM6IERlcGVuZGVuY3lMaXN0ID0gW11cbikgPT4ge1xuICBjb25zdCBoaXN0b3J5ID0gdXNlSGlzdG9yeSgpO1xuICBjb25zdCB7IHNldEJlZm9yZURlc3Ryb3lMaXN0ZW5lciB9ID0gdXNlQ29udGV4dChCZWZvcmVEZXN0cm95Q29udGV4dCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgcGFzc1Byb21wdEhvb2sgPSBmYWxzZTtcbiAgICBjb25zdCBjb25maXJtOiBCZWZvcmVEZXN0cm95TGlzdGVuZXIgPSBwYXJhbXMgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gbGlzdGVuZXIocGFyYW1zKTtcbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuY29uZmlybShyZXN1bHQpIGFzIGFueTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQgIT09IGZhbHNlO1xuICAgIH07XG5cbiAgICAvLyBoaXN0b3J5LmJsb2NrXG4gICAgY29uc3QgcHJvbXB0SG9vayA9IGxvY2F0aW9uID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGNvbmZpcm0oe1xuICAgICAgICB0eXBlOiBcIm5hdmlnYXRlXCIsXG4gICAgICAgIHVybDogbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICB9KTtcbiAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgcGFzc1Byb21wdEhvb2sgPSB0cnVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIGNvbnN0IHVuYmxvY2sgPSBoaXN0b3J5LmJsb2NrKHByb21wdEhvb2sgYXMgYW55KTtcblxuICAgIC8vIOaOp+WItuWPsOi3r+eUsVxuICAgIGNvbnN0IGJlZm9yZURlc3Ryb3lMaXN0ZW5lciA9IHBhcmFtcyA9PiB7XG4gICAgICAvLyDot6/nlLHot7Povazml7blj6/og73lhYjnu4/ov4cgcHJvbXB0SG9va++8jOatpOaXtuWmguaenOWIsOi+viBiZWZvcmVEZXN0cm9577yM5LiA5a6a5piv5LiN6Zi75q2i6Lez6L2sXG4gICAgICBpZiAocGFzc1Byb21wdEhvb2spIHtcbiAgICAgICAgcGFzc1Byb21wdEhvb2sgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbmZpcm0ocGFyYW1zKTtcbiAgICB9O1xuICAgIHNldEJlZm9yZURlc3Ryb3lMaXN0ZW5lcihiZWZvcmVEZXN0cm95TGlzdGVuZXIgYXMgYW55KTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB1bmJsb2NrKCk7XG4gICAgICBzZXRCZWZvcmVEZXN0cm95TGlzdGVuZXIobnVsbCk7XG4gICAgfTtcbiAgfSwgW2xpc3RlbmVyLCAuLi5kZXBzXSk7XG59O1xuIl19