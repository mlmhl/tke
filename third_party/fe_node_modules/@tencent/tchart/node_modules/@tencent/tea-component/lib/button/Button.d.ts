import React from "react";
import { StyledProps, Combine, Omit } from "../_type";
/**
 * Button 组件支持的属性。
 *
 * 除表格中列出的属性外，支持透传原生 `<button>` 标签支持的属性。
 */
export interface ButtonProps extends Combine<StyledProps, Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, "type">> {
    /**
     * 按钮类型
     *
     *   - `primary` 蓝色主要按钮
     *   - `weak` 白色按钮，默认
     *   - `pay` 橙色按钮，用于支付类操作
     *   - `text` 文本按钮，显示为普通文本效果
     *   - `link` 连接按钮，显示为超链接效果
     *   - `icon` 图标按钮，显示为单个图标
     *
     * @default "weak"
     */
    type?: "primary" | "weak" | "pay" | "text" | "link" | "icon";
    /**
     * 原生 `<button>` 标签的 `type` 属性
     */
    htmlType?: React.ButtonHTMLAttributes<HTMLButtonElement>["type"];
    /**
     * 显示为图标按钮，传入的 `icon` 表示图标类型
     *
     * __注意__：如果已经传入 `icon`，则会忽略 `children` 属性
     */
    icon?: string;
    /**
     * 设置按钮为禁用状态
     *
     * 禁用状态下，不会响应 `onClick` 回调
     * */
    disabled?: boolean;
    /**
     * 设置按钮为加载状态
     */
    loading?: boolean;
    /**
     * 点击回调函数
     */
    onClick?: (e?: React.MouseEvent) => void;
    /**
     * 为按钮添加 Tooltip 说明，详细用法请参考 [Tooltip](/component/tooltip) 组件
     */
    tooltip?: React.ReactNode;
}
export declare const Button: React.FunctionComponent<ButtonProps & React.RefAttributes<HTMLButtonElement>> & {
    defaultLabelAlign: string;
};
