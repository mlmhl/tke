"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var moment_1 = require("moment");
var CalendarPart_1 = tslib_1.__importDefault(require("../calendar/CalendarPart"));
var button_1 = require("../button");
var i18n_1 = require("../i18n");
function hasValue(value) {
    if (Array.isArray(value)) {
        return moment_1.isMoment(value[0]) && moment_1.isMoment(value[1]);
    }
    return moment_1.isMoment(value);
}
function TimeSupportWrapper(_a) {
    var onOk = _a.onOk, children = _a.children, props = tslib_1.__rest(_a, ["onOk", "children"]);
    var t = i18n_1.useTranslation();
    var value = props.value, type = props.type, onTypeChange = props.onTypeChange, showTime = props.showTime;
    if (!showTime) {
        return react_1.default.createElement(CalendarPart_1.default.Body, null, children(props));
    }
    function setType(value) {
        if (Array.isArray(type)) {
            onTypeChange([value, value]);
            return;
        }
        onTypeChange(value);
    }
    function isTimeType() {
        if (Array.isArray(type)) {
            return type[0] === "time" && type[1] === "time";
        }
        return type === "time";
    }
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(CalendarPart_1.default.Body, null, children(props)),
        react_1.default.createElement(CalendarPart_1.default.Footer, { left: react_1.default.createElement("div", { className: "tea-date-status" }, isTimeType() ? (react_1.default.createElement(button_1.Button, { type: "link", onClick: function () { return setType("date"); } }, t.selectDate)) : (react_1.default.createElement(button_1.Button, { type: "link", onClick: function () { return setType("time"); }, disabled: !hasValue(value) }, t.selectTime))), right: react_1.default.createElement(button_1.Button, { type: "primary", onClick: onOk, disabled: !hasValue(value) }, t.okText) })));
}
exports.TimeSupportWrapper = TimeSupportWrapper;
//# sourceMappingURL=TimeSupportWrapper.js.map