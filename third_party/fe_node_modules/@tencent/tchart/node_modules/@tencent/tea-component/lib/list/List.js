"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var create_rocket_1 = require("../_util/create-rocket");
var tooltip_1 = require("../tooltip");
var dropdown_1 = require("../dropdown");
var with_statics_1 = require("../_util/with-statics");
function ListItem(_a) {
    var children = _a.children, className = _a.className, style = _a.style, current = _a.current, disabled = _a.disabled, selected = _a.selected, onClick = _a.onClick, tooltip = _a.tooltip;
    return (react_1.default.createElement(tooltip_1.Tooltip, { title: tooltip },
        react_1.default.createElement("li", { className: classnames_1.default(className, {
                "is-current": current,
                "is-disabled": disabled,
                "is-selected": selected,
            }), style: style, onClick: disabled ? null : onClick }, children)));
}
exports.ListItem = ListItem;
function SubMenu(_a) {
    var label = _a.label, children = _a.children, placement = _a.placement, className = _a.className, style = _a.style;
    var dropdownStyle = { position: undefined };
    if (placement === "left") {
        Object.assign(dropdownStyle, {
            left: "auto",
            right: "100%",
        });
    }
    return (react_1.default.createElement("li", { className: classnames_1.default("tea-list__submenu", className), style: style },
        label,
        react_1.default.createElement(dropdown_1.DropdownBox, { style: dropdownStyle }, children)));
}
exports.SubMenu = SubMenu;
exports.List = with_statics_1.withStatics(function List(_a) {
    var _b;
    var className = _a.className, style = _a.style, children = _a.children, type = _a.type, split = _a.split, _c = _a.onScrollBottom, onScrollBottom = _c === void 0 ? function () { return null; } : _c;
    function handleBodyScroll(event) {
        var list = event.target;
        var scrollHeight = list.scrollHeight, scrollTop = list.scrollTop, clientHeight = list.clientHeight;
        if (scrollHeight - scrollTop <= clientHeight) {
            onScrollBottom(event);
        }
    }
    var listClassName = classnames_1.default((_b = {
            "tea-list": true,
            "tea-list--bullet": type === "bullet",
            "tea-list--number": type === "number",
            "tea-list--option": type === "option" || type === "option-group",
            "tea-list--group": type === "option-group",
            "tea-list--divider": split === "divide",
            "tea-list--striped": split === "stripe"
        },
        _b[className] = className,
        _b));
    var Parent = type === "number" ? "ol" : "ul";
    return (react_1.default.createElement(Parent, { className: listClassName, style: style, onScroll: handleBodyScroll }, children));
}, {
    GroupLabel: create_rocket_1.createRocket("GroupLabel", "li.tea-list__label"),
    StatusTip: create_rocket_1.createRocket("TipItem", "li.tea-list__status"),
    SubMenu: SubMenu,
    Item: ListItem,
});
//# sourceMappingURL=List.js.map