"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var jumper_1 = require("../../jumper");
var CellStatus;
(function (CellStatus) {
    CellStatus[CellStatus["Common"] = 0] = "Common";
    CellStatus[CellStatus["Selected"] = 1] = "Selected";
    CellStatus[CellStatus["InRange"] = 2] = "InRange";
    CellStatus[CellStatus["RangeStart"] = 3] = "RangeStart";
    CellStatus[CellStatus["RangeEnd"] = 4] = "RangeEnd";
})(CellStatus = exports.CellStatus || (exports.CellStatus = {}));
function Table(_a) {
    var caption = _a.caption, children = _a.children, _b = _a.jumperOptions, jumperOptions = _b === void 0 ? {} : _b, type = _a.type;
    return (react_1.default.createElement("div", { className: "tea-calendar__table" },
        react_1.default.createElement("div", { className: "tea-calendar__caption" }, caption),
        react_1.default.createElement(jumper_1.Jumper, tslib_1.__assign({}, jumperOptions, { noBordered: true, showCurrent: true })),
        react_1.default.createElement("div", { className: "tea-calendar__row-group" },
            react_1.default.createElement("div", { className: classnames_1.default("tea-calendar__type-wrap", {
                    "tea-calendar__type--month": type === "month",
                    "tea-calendar__type--year": type === "year",
                }) }, children))));
}
exports.default = Table;
Table.Row = TableRow;
Table.Cell = Cell;
function TableRow(_a) {
    var children = _a.children;
    return react_1.default.createElement("div", { className: "tea-calendar__row" }, children);
}
exports.TableRow = TableRow;
function Cell(_a) {
    var name = _a.name, value = _a.value, _b = _a.onSelect, onSelect = _b === void 0 ? function () { return null; } : _b, _c = _a.onOutsideSelect, onOutsideSelect = _c === void 0 ? function () { return null; } : _c, _d = _a.isNow, isNow = _d === void 0 ? false : _d, _e = _a.outside, outside = _e === void 0 ? false : _e, _f = _a.disabled, disabled = _f === void 0 ? false : _f, _g = _a.status, status = _g === void 0 ? CellStatus.Common : _g;
    return (react_1.default.createElement("div", { role: "button", className: classnames_1.default({
            "tea-calendar__cell": true,
            "tea-calendar__cell--now": isNow,
            "tea-calendar__day--outside": outside,
            "tea-calendar__day--in-range": !outside && status === CellStatus.InRange,
            "tea-calendar__day--start is-selected": !outside && status === CellStatus.RangeStart,
            "tea-calendar__day--end is-selected": !outside && status === CellStatus.RangeEnd,
            "is-disabled": disabled,
            "is-selected": !outside && status === CellStatus.Selected,
        }), onClick: function (event) {
            if (!disabled) {
                onSelect(value, { event: event });
                if (outside) {
                    onOutsideSelect(value);
                }
            }
        } },
        react_1.default.createElement("span", null, name)));
}
exports.Cell = Cell;
//# sourceMappingURL=BaseTable.js.map