"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var check_1 = require("../check");
var text_1 = require("../text");
var controlled_1 = require("../form/controlled");
var call_both_1 = require("../_util/call-both");
var tooltip_1 = require("../tooltip");
var noop = function () { };
function Switch(props) {
    // 支持从 Context 注入
    var context = react_1.useContext(check_1.CheckContext);
    if (context) {
        // eslint-disable-next-line no-param-reassign
        props = context.inject(tslib_1.__assign({ type: "checkbox" }, props));
    }
    var _a = controlled_1.useDefaultValue(props, false), value = _a.value, disabled = _a.disabled, _b = _a.onChange, onChange = _b === void 0 ? noop : _b, onClick = _a.onClick, loading = _a.loading, tooltip = _a.tooltip, children = _a.children;
    var component = (react_1.default.createElement("label", { className: classnames_1.default("tea-switch", { "is-loading": loading }) },
        react_1.default.createElement("input", { readOnly: true, type: "checkbox", className: "tea-switch__input", checked: value, disabled: disabled, onClick: call_both_1.callBoth(onClick, function (event) {
                var checked = event.currentTarget.checked;
                onChange(checked, {
                    event: event,
                    check: tslib_1.__assign({ type: "checkbox" }, props, { value: checked }),
                });
            }) }),
        react_1.default.createElement("span", { className: "tea-switch__toggle" })));
    // 默认是不需要 children 的，如果提供了，需要包装一层
    if (children) {
        component = (react_1.default.createElement("label", { onClick: onClick, style: { cursor: disabled ? "default" : "pointer" } },
            component,
            react_1.default.createElement(text_1.Text, { reset: true, style: { verticalAlign: "middle", margin: "0 5px" } }, children)));
    }
    if (tooltip) {
        component = react_1.default.createElement(tooltip_1.Tooltip, { title: tooltip }, component);
    }
    return component;
}
exports.Switch = Switch;
//# sourceMappingURL=Switch.js.map