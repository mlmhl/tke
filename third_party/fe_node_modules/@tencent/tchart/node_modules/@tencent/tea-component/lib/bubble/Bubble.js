"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var BubbleContent_1 = require("./BubbleContent");
var popover_1 = require("../popover");
var is_child_of_type_1 = require("../_util/is-child-of-type");
var button_1 = require("../button");
function Bubble(_a) {
    var visible = _a.visible, onVisibleChange = _a.onVisibleChange, content = _a.content, trigger = _a.trigger, overlayStyle = _a.overlayStyle, openDelay = _a.openDelay, closeDelay = _a.closeDelay, closeOnScroll = _a.closeOnScroll, updateOnDimensionChange = _a.updateOnDimensionChange, transitionTimeout = _a.transitionTimeout, referenceElement = _a.referenceElement, placement = _a.placement, placementOffset = _a.placementOffset, animationScaleFrom = _a.animationScaleFrom, children = _a.children, _b = _a.updateDeps, updateDeps = _b === void 0 ? [content] : _b, bubbleProps = tslib_1.__rest(_a, ["visible", "onVisibleChange", "content", "trigger", "overlayStyle", "openDelay", "closeDelay", "closeOnScroll", "updateOnDimensionChange", "transitionTimeout", "referenceElement", "placement", "placementOffset", "animationScaleFrom", "children", "updateDeps"]);
    // 内容变化时更新位置
    var scheduleUpdateRef = react_1.useRef(null);
    var deps = Array.isArray(updateDeps) ? updateDeps : [content];
    react_1.useLayoutEffect(function () { return function () {
        if (scheduleUpdateRef.current &&
            content !== null &&
            content !== undefined) {
            scheduleUpdateRef.current();
        }
    }; }, deps // eslint-disable-line react-hooks/exhaustive-deps
    );
    // content 为空则不渲染气泡，直接返回内容
    if (content === null || content === undefined) {
        return react_1.default.createElement(react_1.default.Fragment, null, children);
    }
    // issue: https://github.com/facebook/react/issues/4251
    if (react_1.default.Children.count(children) === 1 &&
        (is_child_of_type_1.isChildOfType(children, button_1.Button) || is_child_of_type_1.isChildOfType(children, "button")) &&
        children.props.disabled) {
        // eslint-disable-next-line no-param-reassign
        children = (react_1.default.createElement("span", { style: {
                display: "inline-block",
                cursor: "not-allowed",
            } }, react_1.default.cloneElement(children, {
            style: tslib_1.__assign({}, (children.props.style || {}), { pointerEvents: "none" }),
        })));
    }
    return (react_1.default.createElement(popover_1.Popover, { visible: visible, onVisibleChange: onVisibleChange, closeOnScroll: closeOnScroll, trigger: trigger, placement: placement, placementOffset: placementOffset, animationScaleFrom: animationScaleFrom, referenceElement: referenceElement, overlay: function (_a) {
            var scheduleUpdate = _a.scheduleUpdate, placement = _a.placement;
            scheduleUpdateRef.current = scheduleUpdate;
            return (react_1.default.createElement(BubbleContent_1.BubbleContent, tslib_1.__assign({}, bubbleProps, { placement: placement }), content));
        }, overlayStyle: overlayStyle, openDelay: openDelay, closeDelay: closeDelay, updateOnDimensionChange: updateOnDimensionChange, transitionTimeout: transitionTimeout }, children));
}
exports.Bubble = Bubble;
//# sourceMappingURL=Bubble.js.map