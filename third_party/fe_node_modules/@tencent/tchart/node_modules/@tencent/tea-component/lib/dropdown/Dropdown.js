"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var icon_1 = require("../icon");
var popover_1 = require("../popover");
var create_rocket_1 = require("../_util/create-rocket");
var use_outside_click_1 = require("../_util/use-outside-click");
var forward_ref_with_statics_1 = require("../_util/forward-ref-with-statics");
var use_default_1 = require("../_util/use-default");
var appearenceConfig = {
    // appearence  headerClassName         icon
    default: ["tea-dropdown-default", "arrowdown"],
    button: ["tea-dropdown-btn", "arrowdown"],
    link: ["tea-dropdown-link", "arrowdown"],
    filter: ["tea-dropdown-filter", "filter"],
    // 兼容原有 raw 类型
    raw: [null, null],
};
var noop = function () { };
function DropdownBox(_a) {
    var className = _a.className, _b = _a.style, style = _b === void 0 ? {} : _b, children = _a.children, onClick = _a.onClick, _c = _a.onUpdate, onUpdate = _c === void 0 ? function () { return null; } : _c;
    react_1.useLayoutEffect(function () {
        onUpdate();
    }, [children, onUpdate]);
    if (!children) {
        return null;
    }
    return (react_1.default.createElement("div", { className: classnames_1.default("tea-dropdown-box", className), style: tslib_1.__assign({ position: "relative" }, style), onClick: onClick }, children));
}
exports.DropdownBox = DropdownBox;
var ClickTrigger = function (_a) {
    var childrenElementRef = _a.childrenElementRef, overlayElementRef = _a.overlayElementRef, visible = _a.visible, setVisible = _a.setVisible, _b = _a.openDelay, openDelay = _b === void 0 ? 0 : _b, _c = _a.closeDelay, closeDelay = _c === void 0 ? 0 : _c, render = _a.render, onClose = _a.onClose, onOpen = _a.onOpen;
    var listen = use_outside_click_1.useOutsideClick([childrenElementRef, overlayElementRef]).listen;
    listen(function () {
        if (visible) {
            onClose();
        }
        setVisible(false, closeDelay);
    });
    return render({
        overlayProps: {},
        childrenProps: {
            onClick: function (event) {
                event.stopPropagation();
                if (!visible) {
                    onOpen();
                }
                else {
                    onClose();
                }
                setVisible(!visible, !visible ? openDelay : closeDelay);
            },
        },
    });
};
var HoverTrigger = function (_a) {
    var visible = _a.visible, setVisible = _a.setVisible, _b = _a.openDelay, openDelay = _b === void 0 ? 50 : _b, _c = _a.closeDelay, closeDelay = _c === void 0 ? 100 : _c, render = _a.render, onClose = _a.onClose, onOpen = _a.onOpen;
    var commonProps = {
        onMouseEnter: function () {
            setVisible(true, openDelay).then(function (done) { return done && !visible && onOpen(); });
        },
        onMouseLeave: function () {
            setVisible(false, closeDelay).then(function (done) { return done && onClose(); });
        },
    };
    return render({
        overlayProps: commonProps,
        childrenProps: commonProps,
    });
};
exports.Dropdown = forward_ref_with_statics_1.forwardRefWithStatics(function (props, ref) {
    var _a;
    var _b = props.defaultOpen, defaultOpen = _b === void 0 ? false : _b, open = props.open, onOpenChange = props.onOpenChange, appearence = props.appearence, button = props.button, size = props.size, _c = props.placement, placement = _c === void 0 ? "bottom-start" : _c, _d = props.placementOffset, placementOffset = _d === void 0 ? 5 : _d, trigger = props.trigger, children = props.children, disabled = props.disabled, _e = props.onOpen, onOpen = _e === void 0 ? noop : _e, _f = props.onClose, onClose = _f === void 0 ? noop : _f, _g = props.clickClose, clickClose = _g === void 0 ? true : _g, _h = props.closeOnScroll, closeOnScroll = _h === void 0 ? true : _h, style = props.style, className = props.className, boxStyle = props.boxStyle, boxClassName = props.boxClassName, updateOnChildrenChange = props.updateOnChildrenChange;
    var _j = tslib_1.__read(use_default_1.useDefault(open, defaultOpen, onOpenChange), 2), isOpened = _j[0], setIsOpened = _j[1];
    var close = function () {
        setIsOpened(false);
        onClose();
    };
    var _k = tslib_1.__read(appearenceConfig[appearence] || appearenceConfig.default, 2), headerClassName = _k[0], icon = _k[1];
    var Trigger = trigger === "hover" ? HoverTrigger : ClickTrigger;
    return (react_1.default.createElement(popover_1.Popover, { trigger: disabled
            ? "empty"
            : [
                Trigger,
                {
                    onClose: onClose,
                    onOpen: onOpen,
                },
            ], visible: isOpened, onVisibleChange: setIsOpened, placement: placement, placementOffset: placementOffset, closeOnScroll: closeOnScroll, overlay: function (_a) {
            var scheduleUpdate = _a.scheduleUpdate;
            return (react_1.default.createElement(DropdownBox, { className: boxClassName, style: boxStyle, onClick: clickClose ? close : null, onUpdate: updateOnChildrenChange ? scheduleUpdate : undefined }, typeof children === "function"
                ? children.call(null, close)
                : children));
        } },
        react_1.default.createElement("div", { ref: ref, className: classnames_1.default("tea-dropdown", className, (_a = {},
                _a["size-" + (size === "full" || size === "auto" ? size + "-width" : size)] = size,
                _a["is-expanded"] = isOpened,
                _a["is-disabled"] = disabled,
                _a)), style: style }, appearence === "pure" ? (button) : (react_1.default.createElement("div", { className: classnames_1.default("tea-dropdown__header", headerClassName) },
            react_1.default.createElement("div", { className: "tea-dropdown__value" }, button),
            icon && react_1.default.createElement(icon_1.Icon, { type: icon }))))));
}, {
    Footer: create_rocket_1.createRocket("DropdownFooter", "div.tea-dropdown-box__footer"),
});
//# sourceMappingURL=Dropdown.js.map