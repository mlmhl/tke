"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var EmptyTip_1 = require("./EmptyTip");
var LoadingTip_1 = require("./LoadingTip");
var ErrorTip_1 = require("./ErrorTip");
var FoundTip_1 = require("./FoundTip");
var with_statics_1 = require("../_util/with-statics");
exports.StatusTip = with_statics_1.withStatics(function StatusTip(_a) {
    var status = _a.status, emptyText = _a.emptyText, loadingText = _a.loadingText, errorText = _a.errorText, foundText = _a.foundText, clearResultText = _a.clearResultText, retryText = _a.retryText, onClear = _a.onClear, onRetry = _a.onRetry, styledProps = tslib_1.__rest(_a, ["status", "emptyText", "loadingText", "errorText", "foundText", "clearResultText", "retryText", "onClear", "onRetry"]);
    switch (status) {
        case "loading":
            return react_1.default.createElement(LoadingTip_1.LoadingTip, tslib_1.__assign({}, styledProps, { loadingText: loadingText }));
        case "empty":
            return react_1.default.createElement(EmptyTip_1.EmptyTip, tslib_1.__assign({}, styledProps, { emptyText: emptyText }));
        case "found":
            return (react_1.default.createElement(FoundTip_1.FoundTip, tslib_1.__assign({}, styledProps, { foundText: foundText, onClear: onClear, clearResultText: clearResultText })));
        case "error":
            return (react_1.default.createElement(ErrorTip_1.ErrorTip, tslib_1.__assign({}, styledProps, { errorText: errorText, retryText: retryText, onRetry: onRetry })));
    }
    return null;
}, {
    LoadingTip: LoadingTip_1.LoadingTip,
    EmptyTip: EmptyTip_1.EmptyTip,
    FoundTip: FoundTip_1.FoundTip,
    ErrorTip: ErrorTip_1.ErrorTip,
});
//# sourceMappingURL=StatusTip.js.map