"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/* eslint-disable import/export */
var react_1 = tslib_1.__importDefault(require("react"));
function isChildOfType(child, type) {
    if (typeof child === "undefined" || child === null)
        return false;
    if (typeof child === "string") {
        return type === "text";
    }
    if (typeof child === "number") {
        return type === "number";
    }
    if (react_1.default.isValidElement(child)) {
        if (typeof type === "string") {
            return child.type === type;
        }
        if (typeof type === "function" && typeof child.type === "function") {
            // React Hot Loader 会对组件进行代理。使用 createElemenet() 返回的 element.type 才是实际的类型
            // remark: https://github.com/gaearon/react-hot-loader/issues/304#issuecomment-223222772
            return child.type === react_1.default.createElement(type, {}).type;
        }
        // forwardRef
        if (typeof type === "object" && typeof child.type === "object") {
            // eslint-disable-next-line dot-notation
            return child["$$typeof"] === react_1.default.createElement(type, {})["$$typeof"];
        }
    }
    return false;
}
exports.isChildOfType = isChildOfType;
/* eslint-enable import/export */
//# sourceMappingURL=is-child-of-type.js.map