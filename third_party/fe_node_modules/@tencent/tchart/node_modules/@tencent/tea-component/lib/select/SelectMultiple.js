"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var dropdown_1 = require("../dropdown");
var list_1 = require("../list");
var checkbox_1 = require("../checkbox");
var form_1 = require("../form");
var checktree_1 = require("../checktree");
var button_1 = require("../button");
var i18n_1 = require("../i18n");
var with_statics_1 = require("../_util/with-statics");
exports.SelectMultiple = with_statics_1.withStatics(function SelectMultiple(props) {
    var e_1, _a;
    var _b = form_1.useDefaultValue(props, []), staging = _b.staging, value = _b.value, onChange = _b.onChange, _c = _b.options, options = _c === void 0 ? [] : _c, allOption = _b.allOption, _d = _b.shouldOptionExcludeFromAll, shouldOptionExcludeFromAll = _d === void 0 ? "disabled" : _d, _e = _b.allowEmpty, allowEmpty = _e === void 0 ? true : _e, dropdownProps = tslib_1.__rest(_b, ["staging", "value", "onChange", "options", "allOption", "shouldOptionExcludeFromAll", "allowEmpty"]);
    var t = i18n_1.useTranslation();
    var _f = tslib_1.__read(react_1.useState(value), 2), stagingValue = _f[0], setStagingValue = _f[1];
    var handleChange = function (value, context) {
        if (staging === false) {
            onChange(value, context);
            return;
        }
        setStagingValue(value);
    };
    // 「全部」选项和其余选项是数关系
    var releations = {};
    if (allOption) {
        try {
            for (var options_1 = tslib_1.__values(options), options_1_1 = options_1.next(); !options_1_1.done; options_1_1 = options_1.next()) {
                var option = options_1_1.value;
                if (
                // 用户可以指定哪些选项从全选逻辑中排除
                (typeof shouldOptionExcludeFromAll === "function" &&
                    shouldOptionExcludeFromAll(option)) ||
                    (shouldOptionExcludeFromAll === "disabled" && option.disabled)) {
                    // continue
                }
                else {
                    releations[option.value] = allOption.value;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (options_1_1 && !options_1_1.done && (_a = options_1.return)) _a.call(options_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    return (react_1.default.createElement(dropdown_1.Dropdown, tslib_1.__assign({ updateOnChildrenChange: true, button: react_1.default.createElement(ValueBrief, tslib_1.__assign({}, props, { value: value })), clickClose: false }, dropdownProps), function (close) { return (react_1.default.createElement(checktree_1.CheckTree, { relations: releations, value: stagingValue || value, onChange: handleChange, disabledNames: options.filter(function (x) { return x.disabled; }).map(function (x) { return x.value; }) },
        react_1.default.createElement(list_1.List, { type: "option", className: "tea-list--checkoption" },
            allOption && renderSelectOption(allOption),
            options.map(function (option) { return renderSelectOption(option); })),
        staging !== false && (react_1.default.createElement(dropdown_1.Dropdown.Footer, null,
            react_1.default.createElement(button_1.Button, { type: "primary", disabled: !allowEmpty && stagingValue.length === 0, onClick: function (event) {
                    onChange(stagingValue, { event: event });
                    close();
                } }, t.okText),
            react_1.default.createElement(button_1.Button, { type: "weak", onClick: close }, t.cancelText))))); }));
}, {
    defaultLabelAlign: "middle",
});
function renderSelectOption(option) {
    return (react_1.default.createElement(list_1.List.Item, { key: option.value, tooltip: option.tooltip, disabled: option.disabled },
        react_1.default.createElement(checkbox_1.Checkbox, { onClick: function (evt) { return evt.stopPropagation(); }, name: option.value }, option.text)));
}
function ValueBrief(_a) {
    var value = _a.value, allOption = _a.allOption, options = _a.options, button = _a.button, placeholder = _a.placeholder;
    var t = i18n_1.useTranslation();
    if (button) {
        return react_1.default.createElement(react_1.Fragment, null, button);
    }
    if (!value || !value.length) {
        return react_1.default.createElement(react_1.Fragment, null, placeholder || t.pleaseSelect);
    }
    if (allOption && value.length === options.length) {
        return react_1.default.createElement(react_1.Fragment, null, allOption.text || allOption.value);
    }
    var showupOption = value
        .slice(0, 5)
        .map(function (x) { return options.find(function (y) { return y.value === x; }); });
    var showupExcceed = showupOption.length < value.length;
    return (react_1.default.createElement(react_1.Fragment, null,
        showupOption
            .filter(function (x) { return x; })
            .map(function (option, index) { return (react_1.default.createElement(react_1.Fragment, { key: option.value },
            option.text || option.value,
            index < showupOption.length - 1 && ", ")); }),
        showupExcceed && "..."));
}
//# sourceMappingURL=SelectMultiple.js.map