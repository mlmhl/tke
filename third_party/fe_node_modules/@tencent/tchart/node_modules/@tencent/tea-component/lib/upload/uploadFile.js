"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function upload(_a) {
    var action = _a.action, file = _a.file, filename = _a.filename, _b = _a.data, data = _b === void 0 ? {} : _b, _c = _a.headers, headers = _c === void 0 ? {} : _c, _d = _a.withCredentials, withCredentials = _d === void 0 ? false : _d, _e = _a.onProgress, onProgress = _e === void 0 ? function () { return null; } : _e, _f = _a.onSuccess, onSuccess = _f === void 0 ? function () { return null; } : _f, _g = _a.onError, onError = _g === void 0 ? function () { return null; } : _g;
    var formData = new FormData();
    formData.append(filename, file);
    var xhr = new XMLHttpRequest();
    xhr.onload = function (event) {
        if (!(xhr.status >= 200 && xhr.status < 300)) {
            var error = new Error(xhr.status + " " + xhr.statusText);
            onError(error, { event: event, xhr: xhr, file: file });
            return;
        }
        var text = xhr.responseText || xhr.response;
        try {
            var data_1 = JSON.parse(text);
            onSuccess(data_1, { event: event, xhr: xhr, file: file });
        }
        catch (err) {
            onSuccess(text, { event: event, xhr: xhr, file: file });
        }
    };
    xhr.onerror = function (event) {
        return onError(new Error("Http Request Error"), { event: event, xhr: xhr, file: file });
    };
    if (onProgress && xhr.upload) {
        xhr.upload.onprogress = function (event) {
            if (event.lengthComputable && event.total) {
                onProgress({
                    total: event.total,
                    loaded: event.loaded,
                    percent: (event.loaded / event.total) * 100,
                }, { event: event, xhr: xhr, file: file });
            }
        };
    }
    Object.keys(data).forEach(function (key) {
        formData.append(key, data[key]);
    });
    xhr.open("POST", action, true);
    xhr.withCredentials = withCredentials;
    Object.keys(headers).forEach(function (key) {
        xhr.setRequestHeader(key, headers[key]);
    });
    xhr.send(formData);
    return xhr;
}
exports.upload = upload;
//# sourceMappingURL=uploadFile.js.map