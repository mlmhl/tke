"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var FormControl_1 = require("./FormControl");
var FormContext_1 = require("./FormContext");
function FormItem(_a) {
    var htmlFor = _a.htmlFor, label = _a.label, children = _a.children, className = _a.className, style = _a.style, status = _a.status, message = _a.message, align = _a.align, required = _a.required, _b = _a.showStatusIcon, showStatusIcon = _b === void 0 ? true : _b, suffix = _a.suffix;
    return (react_1.default.createElement(FormContext_1.FormContext.Consumer, null, function (_a) {
        var hideLabel = _a.hideLabel;
        return (react_1.default.createElement("div", { className: classnames_1.default("tea-form__item", className), style: style },
            !hideLabel && (react_1.default.createElement("div", { className: classnames_1.default("tea-form__label", {
                    "is-required": required,
                }) }, typeof label !== "undefined" && (react_1.default.createElement("label", { htmlFor: htmlFor }, label)))),
            react_1.default.createElement(FormControl_1.FormControl, { status: status, showStatusIcon: showStatusIcon, message: message, alignLabelTop: isAlignLabelTop(align, children) },
                children,
                suffix && (react_1.default.createElement("div", { className: "tea-form__help-text--inline" }, suffix)))));
    }));
}
exports.FormItem = FormItem;
function isAlignLabelTop(align, children) {
    if (align === "top") {
        return true;
    }
    if (align === "middle") {
        return false;
    }
    return getDefaultAlign(children) === "top";
}
function getDefaultAlign(control) {
    if (react_1.default.isValidElement(control) &&
        // 普通组件是 function, forwaredRef 是 object
        (typeof control.type === "function" || typeof control.type === "object") &&
        "defaultLabelAlign" in control.type) {
        return control.type["defaultLabelAlign"]; // eslint-disable-line dot-notation
    }
    return "top";
}
//# sourceMappingURL=FormItem.js.map