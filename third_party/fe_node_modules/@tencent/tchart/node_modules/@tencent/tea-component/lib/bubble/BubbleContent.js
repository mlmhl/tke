"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
// 三角朝向和 placement 位置是相对的
var POSITION_MAP = {
    top: "bottom",
    bottom: "top",
    left: "right",
    right: "left",
};
exports.BubbleContent = react_1.forwardRef(function (props, ref) {
    var _a;
    var _b = props.placement, placement = _b === void 0 ? "top" : _b, children = props.children, className = props.className, error = props.error, dark = props.dark, tooltip = props.tooltip, htmlProps = tslib_1.__rest(props, ["placement", "children", "className", "error", "dark", "tooltip"]);
    // placement 可能是 "top-start" 的形式，需要拆成两个词来使用
    var _c = tslib_1.__read(placement.split("-"), 2), basePlacement = _c[0], placementModifier = _c[1]; // eslint-disable-line prefer-const
    if (basePlacement === "auto") {
        basePlacement = "top";
    }
    var focusPosition = POSITION_MAP[basePlacement] || "bottom";
    if (tooltip) {
        return (react_1.default.createElement("div", tslib_1.__assign({ className: "tea-tooltip", ref: ref }, htmlProps),
            react_1.default.createElement("div", { className: "tea-tooltip__inner" }, children)));
    }
    return (react_1.default.createElement("div", tslib_1.__assign({ ref: ref, className: classnames_1.default((_a = {},
            _a["tea-bubble"] = true,
            _a["tea-bubble--" + focusPosition] = focusPosition,
            _a["tea-bubble--" + placementModifier] = placementModifier,
            _a["tea-bubble--error"] = error,
            _a["tea-bubble--reverse"] = dark,
            _a[className] = className,
            _a)) }, htmlProps),
        react_1.default.createElement("div", { className: "tea-bubble__inner" }, children)));
});
exports.BubbleContent.displayName = "BubbleContent";
//# sourceMappingURL=BubbleContent.js.map