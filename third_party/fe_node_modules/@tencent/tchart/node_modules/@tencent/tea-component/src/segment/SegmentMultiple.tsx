import React from "react";
import classNames from "classnames";
import { ControlledProps, useDefaultValue } from "../form/controlled";
import { SegmentOption } from "./SegmentOption";
import { Combine, StyledProps } from "../_type";
import { Button } from "../button";

export interface SegmentMultipleProps
  extends Combine<StyledProps, ControlledProps<string[]>> {
  options?: SegmentOption[];
}

export function SegmentMultiple(props: SegmentMultipleProps) {
  const { value, onChange, options, style, className } = useDefaultValue(props);

  const valueSet = new Set(value);

  return (
    <div className={classNames("tea-segment", className)} style={style}>
      {options.map(option => (
        <Button
          key={option.value}
          disabled={option.disabled}
          tooltip={option.tooltip}
          className={classNames({
            "is-selected": valueSet.has(option.value),
          })}
          onClick={
            option.disabled
              ? null
              : event => {
                  let newValue: string[];

                  // 之前已经选中，新值排除此值
                  if (valueSet.has(option.value)) {
                    newValue = options
                      .filter(x => x !== option && valueSet.has(x.value))
                      .map(x => x.value);
                  }
                  // 之前没有选中，新值包含次值
                  else {
                    newValue = options
                      .filter(x => x === option || valueSet.has(x.value))
                      .map(x => x.value);
                  }
                  onChange(newValue, { event });
                }
          }
        >
          {option.text || option.value}
        </Button>
      ))}
    </div>
  );
}

SegmentMultiple.defaultLabelAlign = "middle";
