import React from "react";
import classNames from "classnames";
import { ControlledProps, useDefaultValue } from "../form/controlled";
import { Combine, Omit } from "../_type";
import { DropdownProps, Dropdown, CommonDropdownProps } from "../dropdown";
import { RegionOption, RegionOptionContext } from "./RegionOption";
import { getPropsFromChildrenByType } from "../_util/get-props-from-children-by-type";

export interface RegionSelectProps
  extends Combine<
    CommonDropdownProps,
    ControlledProps<string>,
    Omit<DropdownProps, "button" | "children" | "appearence">
  > {
  /**
   * 下拉内容，应该使用 `RegionPanel`
   */
  children?: React.ReactNode;

  /**
   * 在下拉按钮显示的额外信息
   */
  moreInfo?: React.ReactNode;
}

export function RegionSelect(props: RegionSelectProps) {
  // eslint-disable-next-line react/destructuring-assignment
  const options = getPropsFromChildrenByType(props.children, RegionOption);

  const {
    value,
    onChange,
    moreInfo,
    children,
    ...dropdownProps
  } = useDefaultValue(props, options[0].value);

  const selectedOption =
    options.find(x => x && x.value === value) || options[0];

  return (
    <Dropdown
      {...dropdownProps}
      appearence="button"
      className={classNames(
        "tea-dropdown--region-select",
        dropdownProps.className
      )}
      button={
        <>
          {selectedOption && <RegionOption {...selectedOption} />}
          {moreInfo && <div className="tea-region__more">{moreInfo}</div>}
        </>
      }
    >
      {
        <RegionOptionContext.Provider
          value={{
            inject(props) {
              return {
                ...props,
                selected: value === props.value,
                onClick(event) {
                  if (typeof props.onClick === "function") {
                    props.onClick(event);
                  }
                  if (event.isDefaultPrevented()) {
                    return;
                  }
                  onChange(props.value, { event });
                },
              };
            },
          }}
        >
          {children}
        </RegionOptionContext.Provider>
      }
    </Dropdown>
  );
}

RegionSelect.defaultLabelAlign = "middle";
