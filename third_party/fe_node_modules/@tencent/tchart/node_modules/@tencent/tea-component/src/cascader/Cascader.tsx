import React from "react";
import classNames from "classnames";
import { useDefaultValue } from "../form";
import { Popover } from "../popover";
import { Input } from "../input";
import { Icon } from "../icon";
import { useTranslation } from "../i18n";
import { CascaderProps } from "./CascaderProps";
import { CascaderBox, getOptions } from "./CascaderBox";
import { useDefault } from "../_util/use-default";

export function Cascader(props: CascaderProps) {
  const t = useTranslation();
  const {
    data,
    value,
    onChange,
    onLoad,
    disabled,
    changeOnSelect,
    className,
    style,
    placeholder = t.pleaseSelect,
    defaultOpen = false,
    open,
    onOpenChange = () => null,
    placement = "bottom-start",
    placementOffset = 5,
    closeOnScroll = true,
  } = useDefaultValue(props, []);

  const [isOpened, setIsOpened] = useDefault(open, defaultOpen, onOpenChange);
  const options = getOptions(data, value);

  return (
    <Popover
      trigger={disabled ? "empty" : "click"}
      visible={isOpened}
      onVisibleChange={setIsOpened}
      placement={placement || "bottom-start"}
      placementOffset={placementOffset}
      closeOnScroll={closeOnScroll}
      overlay={({ scheduleUpdate }) => {
        return (
          <CascaderBox
            data={data}
            value={value}
            onChange={onChange}
            onLoad={onLoad}
            onClose={() => setIsOpened(false)}
            changeOnSelect={changeOnSelect}
            scheduleUpdate={scheduleUpdate}
          />
        );
      }}
    >
      <div className={classNames("tea-cascader", className)} style={style}>
        <div className="tea-cascader__input">
          <div className="tea-cascader__value">
            {options.map(({ value, label }) => (
              <span key={value} className="tea-cascader__label">
                {label || value}
              </span>
            ))}
          </div>
          <Input
            readonly
            autoComplete="off"
            placeholder={value.length ? "" : placeholder}
          />
        </div>
        <Icon type="arrowdown" />
      </div>
    </Popover>
  );
}
