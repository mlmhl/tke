import React, { useContext } from "react";
import classNames from "classnames";
import { RegionFlag } from "./RegionFlag";

export interface RegionOptionProps {
  /**
   * 地域值
   */
  value: string;

  /**
   * 地域显示文案
   */
  children?: React.ReactNode;

  /**
   * 旗标样式，目前支持的旗标有：
   *
   * - Globe 全球
   * - China 中国
   * - Hongkong 香港
   * - India 印度
   * - Korea 韩国
   * - Thailand 荷兰
   * - Singapore 新加坡
   * - America 美国
   * - Canada 加拿大
   * - Germany 德国
   * - Russia 俄罗斯
   * - Japan 日本
   *
   * @default "Globe"
   */
  flag?: string;

  /**
   *  **\[Deprecated\]** 请使用 `flag` 属性
   *
   * @deprecated
   */
  country?: string;

  /**
   * 是否被选中
   *
   * **如在 `RegionSelect` 中使用，无需传值**
   */
  selected?: boolean;

  /**
   * 是否显示提醒小红点
   * @default false
   */
  dot?: boolean;

  /**
   * 被点击时回调
   */
  onClick?: React.MouseEventHandler;
}

export interface RegionOptionContext {
  inject(props: RegionOptionProps): RegionOptionProps;
}
export const RegionOptionContext = React.createContext<RegionOptionContext>(
  null
);

export function RegionOption(props: RegionOptionProps) {
  const context = useContext(RegionOptionContext);

  if (context) {
    props = context.inject(props); // eslint-disable-line no-param-reassign
  }

  const { country, children, dot, selected, onClick, flag = country } = props;

  return (
    <div
      className={classNames({
        "tea-region__item": true,
        "is-selected": selected,
      })}
      onClick={onClick}
    >
      <RegionFlag flag={flag} />
      <span className="tea-region__name">
        {children}
        {dot && <i className="tea-region__new" />}
      </span>
    </div>
  );
}
