/* eslint-disable no-undef */
import React from "react";
import { mount } from "enzyme";
import { AutoComplete } from "../AutoComplete";

describe("AutoComplete", () => {
  it("render correctly", () => {
    const options = [
      { value: "strawberry", text: "草莓" },
      { value: "apple", text: "苹果" },
      { value: "orange", text: "桔子" },
    ];
    const wrapper = mount(
      <AutoComplete options={options}>{ref => <input />}</AutoComplete>
    );
    expect(wrapper.find("input").length).toBe(1);
  });

  it.skip("child.ref should work", () => {
    const mockOnchange = jest
      .fn()
      .mockImplementation((value, context, event) => {});
    const options = [
      { value: "strawberry", text: "草莓" },
      { value: "apple", text: "苹果" },
      { value: "orange", text: "桔子" },
    ];
    const wrapper = mount(
      <AutoComplete onChange={mockOnchange}>{ref => <input />}</AutoComplete>
    );
    wrapper.find("input").simulate("change", { target: { value: "苹" } });
    expect(mockOnchange).toHaveBeenCalled();
  });
});
